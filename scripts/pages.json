[{"name":"abstract class JsNavigationNode<Config : Base, Base : NavigationNodeDefaultConfig>(val chain: NavigationChain<Base>, config: Config) : NavigationNode<Config, Base> ","description":"dev.inmo.navigation.core.JsNavigationNode","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/index.html","searchKeys":["JsNavigationNode","abstract class JsNavigationNode<Config : Base, Base : NavigationNodeDefaultConfig>(val chain: NavigationChain<Base>, config: Config) : NavigationNode<Config, Base> ","dev.inmo.navigation.core.JsNavigationNode"]},{"name":"abstract class NavigationNode<Config : Base, Base>(val id: NavigationNodeId = NavigationNodeId())","description":"dev.inmo.navigation.core.NavigationNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/index.html","searchKeys":["NavigationNode","abstract class NavigationNode<Config : Base, Base>(val id: NavigationNodeId = NavigationNodeId())","dev.inmo.navigation.core.NavigationNode"]},{"name":"abstract class NodeFragment<Config : Base, Base : NavigationNodeDefaultConfig> : Fragment","description":"dev.inmo.navigation.core.fragments.NodeFragment","location":"navigation.core/dev.inmo.navigation.core.fragments/-node-fragment/index.html","searchKeys":["NodeFragment","abstract class NodeFragment<Config : Base, Base : NavigationNodeDefaultConfig> : Fragment","dev.inmo.navigation.core.fragments.NodeFragment"]},{"name":"abstract fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.onPlace","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/on-place.html","searchKeys":["onPlace","abstract fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.onPlace"]},{"name":"abstract fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.onRemove","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/on-remove.html","searchKeys":["onRemove","abstract fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.onRemove"]},{"name":"abstract fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationNodeFactory.createNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/create-node.html","searchKeys":["createNode","abstract fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationNodeFactory.createNode"]},{"name":"abstract fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.get","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/get.html","searchKeys":["get","abstract fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.repo.NavigationConfigsRepo.get"]},{"name":"abstract fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.save","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/save.html","searchKeys":["save","abstract fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.repo.NavigationConfigsRepo.save"]},{"name":"abstract operator fun FragmentTransaction.invoke(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.invoke","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-default/invoke.html","searchKeys":["invoke","abstract operator fun FragmentTransaction.invoke(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.invoke"]},{"name":"abstract val chain: NavigationChain<Base>","description":"dev.inmo.navigation.core.NavigationNode.chain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/chain.html","searchKeys":["chain","abstract val chain: NavigationChain<Base>","dev.inmo.navigation.core.NavigationNode.chain"]},{"name":"abstract val configState: StateFlow<Config>","description":"dev.inmo.navigation.core.NavigationNode.configState","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/config-state.html","searchKeys":["configState","abstract val configState: StateFlow<Config>","dev.inmo.navigation.core.NavigationNode.configState"]},{"name":"abstract val id: String","description":"dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig.id","location":"navigation.core/dev.inmo.navigation.core.configs/-navigation-node-default-config/id.html","searchKeys":["id","abstract val id: String","dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig.id"]},{"name":"abstract val stateNumber: Byte","description":"dev.inmo.navigation.core.NavigationNodeState.stateNumber","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/state-number.html","searchKeys":["stateNumber","abstract val stateNumber: Byte","dev.inmo.navigation.core.NavigationNodeState.stateNumber"]},{"name":"class AndroidFragmentNode<Config : Base, Base : NavigationNodeDefaultConfig>(val chain: NavigationChain<Base>, config: Config, fragmentKClass: KClass<*>, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener, manualHierarchyCheckerDelayMillis: Long? = 100, val id: NavigationNodeId = NavigationNodeId(), fragmentTransactionConfigurator: FragmentTransactionConfigurator<Base>? = null) : NavigationNode<Config, Base> ","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/index.html","searchKeys":["AndroidFragmentNode","class AndroidFragmentNode<Config : Base, Base : NavigationNodeDefaultConfig>(val chain: NavigationChain<Base>, config: Config, fragmentKClass: KClass<*>, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener, manualHierarchyCheckerDelayMillis: Long? = 100, val id: NavigationNodeId = NavigationNodeId(), fragmentTransactionConfigurator: FragmentTransactionConfigurator<Base>? = null) : NavigationNode<Config, Base> ","dev.inmo.navigation.core.fragments.AndroidFragmentNode"]},{"name":"class AndroidNavigationNodeFactory<T : NavigationNodeDefaultConfig>(fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentKClassResolver: FragmentsClassesFactory<T>) : NavigationNodeFactory<T> ","description":"dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-navigation-node-factory/index.html","searchKeys":["AndroidNavigationNodeFactory","class AndroidNavigationNodeFactory<T : NavigationNodeDefaultConfig>(fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentKClassResolver: FragmentsClassesFactory<T>) : NavigationNodeFactory<T> ","dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory"]},{"name":"class AndroidSPConfigsRepo<T : Any>(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, key: String = \"navigation\", json: Json) : NavigationConfigsRepo<T> ","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/index.html","searchKeys":["AndroidSPConfigsRepo","class AndroidSPConfigsRepo<T : Any>(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, key: String = \"navigation\", json: Json) : NavigationConfigsRepo<T> ","dev.inmo.navigation.core.AndroidSPConfigsRepo"]},{"name":"class Callbacks<T : NavigationNodeDefaultConfig>(onPlaceFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit, onRemoveFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit) : FragmentTransactionConfigurator<T> ","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-callbacks/index.html","searchKeys":["Callbacks","class Callbacks<T : NavigationNodeDefaultConfig>(onPlaceFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit, onRemoveFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit) : FragmentTransactionConfigurator<T> ","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks"]},{"name":"class Empty<T : Base, Base>(val chain: NavigationChain<Base>, config: T, id: NavigationNodeId = NavigationNodeId()) : NavigationNode<T, Base> ","description":"dev.inmo.navigation.core.NavigationNode.Empty","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/index.html","searchKeys":["Empty","class Empty<T : Base, Base>(val chain: NavigationChain<Base>, config: T, id: NavigationNodeId = NavigationNodeId()) : NavigationNode<T, Base> ","dev.inmo.navigation.core.NavigationNode.Empty"]},{"name":"class InMemory<T>(initial: ConfigHolder<T>? = null) : NavigationConfigsRepo<T> ","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/index.html","searchKeys":["InMemory","class InMemory<T>(initial: ConfigHolder<T>? = null) : NavigationConfigsRepo<T> ","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory"]},{"name":"class NavigationChain<Base>(val parentNode: NavigationNode<out Base, Base>?, nodeFactory: NavigationNodeFactory<Base>, val id: NavigationChainId? = null)","description":"dev.inmo.navigation.core.NavigationChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/index.html","searchKeys":["NavigationChain","class NavigationChain<Base>(val parentNode: NavigationNode<out Base, Base>?, nodeFactory: NavigationNodeFactory<Base>, val id: NavigationChainId? = null)","dev.inmo.navigation.core.NavigationChain"]},{"name":"class NavigationFragmentContainerView(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int) : FrameLayout","description":"dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView","location":"navigation.core/dev.inmo.navigation.core.fragments.view/-navigation-fragment-container-view/index.html","searchKeys":["NavigationFragmentContainerView","class NavigationFragmentContainerView(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int) : FrameLayout","dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView"]},{"name":"class OneParameterUrlNavigationConfigsRepo<T : Any>(format: StringFormat, configSerializer: KSerializer<T>, queryParam: String = \"navigation\", encodeDecoded: (String) -> String = { it }, decodeEncoded: (String) -> String = { it }) : NavigationConfigsRepo<T> ","description":"dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core.urls/-one-parameter-url-navigation-configs-repo/index.html","searchKeys":["OneParameterUrlNavigationConfigsRepo","class OneParameterUrlNavigationConfigsRepo<T : Any>(format: StringFormat, configSerializer: KSerializer<T>, queryParam: String = \"navigation\", encodeDecoded: (String) -> String = { it }, decodeEncoded: (String) -> String = { it }) : NavigationConfigsRepo<T> ","dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo"]},{"name":"class StorageNavigationConfigsRepo<T>(format: StringFormat, serializer: KSerializer<ConfigHolder<T>>, key: String = \"navigation\", storage: Storage = localStorage) : NavigationConfigsRepo<T> ","description":"dev.inmo.navigation.core.StorageNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-storage-navigation-configs-repo/index.html","searchKeys":["StorageNavigationConfigsRepo","class StorageNavigationConfigsRepo<T>(format: StringFormat, serializer: KSerializer<ConfigHolder<T>>, key: String = \"navigation\", storage: Storage = localStorage) : NavigationConfigsRepo<T> ","dev.inmo.navigation.core.StorageNavigationConfigsRepo"]},{"name":"class UrlParametersNavigationConfigsRepo<T : Any>(buildSearchParams: UrlParametersNavigationConfigsRepo.LocationData.Builder.(ConfigHolder<T>) -> Unit, parseSearchParams: (UrlParametersNavigationConfigsRepo.LocationData) -> ConfigHolder<T>?, titleResolver: (ConfigHolder<T>) -> String? = { null }) : NavigationConfigsRepo<T> ","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/index.html","searchKeys":["UrlParametersNavigationConfigsRepo","class UrlParametersNavigationConfigsRepo<T : Any>(buildSearchParams: UrlParametersNavigationConfigsRepo.LocationData.Builder.(ConfigHolder<T>) -> Unit, parseSearchParams: (UrlParametersNavigationConfigsRepo.LocationData) -> ConfigHolder<T>?, titleResolver: (ConfigHolder<T>) -> String? = { null }) : NavigationConfigsRepo<T> ","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo"]},{"name":"constructor()","description":"dev.inmo.navigation.core.fragments.NodeFragment.NodeFragment","location":"navigation.core/dev.inmo.navigation.core.fragments/-node-fragment/-node-fragment.html","searchKeys":["NodeFragment","constructor()","dev.inmo.navigation.core.fragments.NodeFragment.NodeFragment"]},{"name":"constructor(buildSearchParams: UrlParametersNavigationConfigsRepo.LocationData.Builder.(ConfigHolder<T>) -> Unit, parseSearchParams: (UrlParametersNavigationConfigsRepo.LocationData) -> ConfigHolder<T>?, titleResolver: (ConfigHolder<T>) -> String? = { null })","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.UrlParametersNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-url-parameters-navigation-configs-repo.html","searchKeys":["UrlParametersNavigationConfigsRepo","constructor(buildSearchParams: UrlParametersNavigationConfigsRepo.LocationData.Builder.(ConfigHolder<T>) -> Unit, parseSearchParams: (UrlParametersNavigationConfigsRepo.LocationData) -> ConfigHolder<T>?, titleResolver: (ConfigHolder<T>) -> String? = { null })","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.UrlParametersNavigationConfigsRepo"]},{"name":"constructor(chain: NavigationChain<Base>, config: Config)","description":"dev.inmo.navigation.core.JsNavigationNode.JsNavigationNode","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/-js-navigation-node.html","searchKeys":["JsNavigationNode","constructor(chain: NavigationChain<Base>, config: Config)","dev.inmo.navigation.core.JsNavigationNode.JsNavigationNode"]},{"name":"constructor(chain: NavigationChain<Base>, config: Config, fragmentKClass: KClass<*>, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener, manualHierarchyCheckerDelayMillis: Long? = 100, id: NavigationNodeId = NavigationNodeId(), fragmentTransactionConfigurator: FragmentTransactionConfigurator<Base>? = null)","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.AndroidFragmentNode","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/-android-fragment-node.html","searchKeys":["AndroidFragmentNode","constructor(chain: NavigationChain<Base>, config: Config, fragmentKClass: KClass<*>, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener, manualHierarchyCheckerDelayMillis: Long? = 100, id: NavigationNodeId = NavigationNodeId(), fragmentTransactionConfigurator: FragmentTransactionConfigurator<Base>? = null)","dev.inmo.navigation.core.fragments.AndroidFragmentNode.AndroidFragmentNode"]},{"name":"constructor(chain: NavigationChain<Base>, config: T, id: NavigationNodeId = NavigationNodeId())","description":"dev.inmo.navigation.core.NavigationNode.Empty.Empty","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/-empty.html","searchKeys":["Empty","constructor(chain: NavigationChain<Base>, config: T, id: NavigationNodeId = NavigationNodeId())","dev.inmo.navigation.core.NavigationNode.Empty.Empty"]},{"name":"constructor(config: T, subnode: ConfigHolder.Node<T>?, subchains: List<ConfigHolder.Chain<T>>)","description":"dev.inmo.navigation.core.repo.ConfigHolder.Node.Node","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-node/-node.html","searchKeys":["Node","constructor(config: T, subnode: ConfigHolder.Node<T>?, subchains: List<ConfigHolder.Chain<T>>)","dev.inmo.navigation.core.repo.ConfigHolder.Node.Node"]},{"name":"constructor(configsRepo: NavigationConfigsRepo<T>, startChain: ConfigHolder<T>, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentsClassesFactory: FragmentsClassesFactory<T>)","description":"dev.inmo.navigation.core.AndroidNavigationHost.AndroidNavigationHost","location":"navigation.core/dev.inmo.navigation.core/-android-navigation-host/-android-navigation-host.html","searchKeys":["AndroidNavigationHost","constructor(configsRepo: NavigationConfigsRepo<T>, startChain: ConfigHolder<T>, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentsClassesFactory: FragmentsClassesFactory<T>)","dev.inmo.navigation.core.AndroidNavigationHost.AndroidNavigationHost"]},{"name":"constructor(context: Context)","description":"dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView","location":"navigation.core/dev.inmo.navigation.core.fragments.view/-navigation-fragment-container-view/-navigation-fragment-container-view.html","searchKeys":["NavigationFragmentContainerView","constructor(context: Context)","dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView"]},{"name":"constructor(context: Context, attrs: AttributeSet?)","description":"dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView","location":"navigation.core/dev.inmo.navigation.core.fragments.view/-navigation-fragment-container-view/-navigation-fragment-container-view.html","searchKeys":["NavigationFragmentContainerView","constructor(context: Context, attrs: AttributeSet?)","dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView"]},{"name":"constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int)","description":"dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView","location":"navigation.core/dev.inmo.navigation.core.fragments.view/-navigation-fragment-container-view/-navigation-fragment-container-view.html","searchKeys":["NavigationFragmentContainerView","constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int)","dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView"]},{"name":"constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int)","description":"dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView","location":"navigation.core/dev.inmo.navigation.core.fragments.view/-navigation-fragment-container-view/-navigation-fragment-container-view.html","searchKeys":["NavigationFragmentContainerView","constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int)","dev.inmo.navigation.core.fragments.view.NavigationFragmentContainerView.NavigationFragmentContainerView"]},{"name":"constructor(factories: List<NavigationNodeFactory<Base>>)","description":"dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator.DefaultAggregator","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-default-aggregator/-default-aggregator.html","searchKeys":["DefaultAggregator","constructor(factories: List<NavigationNodeFactory<Base>>)","dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator.DefaultAggregator"]},{"name":"constructor(firstNodeConfig: ConfigHolder.Node<T>?, id: NavigationChainId? = null)","description":"dev.inmo.navigation.core.repo.ConfigHolder.Chain.Chain","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-chain/-chain.html","searchKeys":["Chain","constructor(firstNodeConfig: ConfigHolder.Node<T>?, id: NavigationChainId? = null)","dev.inmo.navigation.core.repo.ConfigHolder.Chain.Chain"]},{"name":"constructor(format: StringFormat, configSerializer: KSerializer<T>, queryParam: String = \"navigation\", encodeDecoded: (String) -> String = { it }, decodeEncoded: (String) -> String = { it })","description":"dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.OneParameterUrlNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core.urls/-one-parameter-url-navigation-configs-repo/-one-parameter-url-navigation-configs-repo.html","searchKeys":["OneParameterUrlNavigationConfigsRepo","constructor(format: StringFormat, configSerializer: KSerializer<T>, queryParam: String = \"navigation\", encodeDecoded: (String) -> String = { it }, decodeEncoded: (String) -> String = { it })","dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.OneParameterUrlNavigationConfigsRepo"]},{"name":"constructor(format: StringFormat, serializer: KSerializer<ConfigHolder<T>>, key: String = \"navigation\", storage: Storage = localStorage)","description":"dev.inmo.navigation.core.StorageNavigationConfigsRepo.StorageNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-storage-navigation-configs-repo/-storage-navigation-configs-repo.html","searchKeys":["StorageNavigationConfigsRepo","constructor(format: StringFormat, serializer: KSerializer<ConfigHolder<T>>, key: String = \"navigation\", storage: Storage = localStorage)","dev.inmo.navigation.core.StorageNavigationConfigsRepo.StorageNavigationConfigsRepo"]},{"name":"constructor(fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentKClassResolver: FragmentsClassesFactory<T>)","description":"dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory.AndroidNavigationNodeFactory","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-navigation-node-factory/-android-navigation-node-factory.html","searchKeys":["AndroidNavigationNodeFactory","constructor(fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentKClassResolver: FragmentsClassesFactory<T>)","dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory.AndroidNavigationNodeFactory"]},{"name":"constructor(id: NavigationNodeId = NavigationNodeId())","description":"dev.inmo.navigation.core.NavigationNode.NavigationNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-navigation-node.html","searchKeys":["NavigationNode","constructor(id: NavigationNodeId = NavigationNodeId())","dev.inmo.navigation.core.NavigationNode.NavigationNode"]},{"name":"constructor(initial: ConfigHolder<T>? = null)","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.InMemory","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/-in-memory.html","searchKeys":["InMemory","constructor(initial: ConfigHolder<T>? = null)","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.InMemory"]},{"name":"constructor(kClass: KClass<*>, block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>)","description":"dev.inmo.navigation.core.NavigationNodeFactory.Typed.Typed","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-typed/-typed.html","searchKeys":["Typed","constructor(kClass: KClass<*>, block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>)","dev.inmo.navigation.core.NavigationNodeFactory.Typed.Typed"]},{"name":"constructor(onPlaceFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit, onRemoveFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.Callbacks","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-callbacks/-callbacks.html","searchKeys":["Callbacks","constructor(onPlaceFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit, onRemoveFun: FragmentTransaction.(AndroidFragmentNode<out T, T>) -> Unit)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.Callbacks"]},{"name":"constructor(parentNode: NavigationNode<out Base, Base>?, nodeFactory: NavigationNodeFactory<Base>, id: NavigationChainId? = null)","description":"dev.inmo.navigation.core.NavigationChain.NavigationChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/-navigation-chain.html","searchKeys":["NavigationChain","constructor(parentNode: NavigationNode<out Base, Base>?, nodeFactory: NavigationNodeFactory<Base>, id: NavigationChainId? = null)","dev.inmo.navigation.core.NavigationChain.NavigationChain"]},{"name":"constructor(pathSegments: Array<String> = emptyArray(), urlSearchParams: URLSearchParams = URLSearchParams())","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.LocationData","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-location-data.html","searchKeys":["LocationData","constructor(pathSegments: Array<String> = emptyArray(), urlSearchParams: URLSearchParams = URLSearchParams())","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.LocationData"]},{"name":"constructor(pathSegments: MutableList<String> = mutableListOf(), parameters: MutableMap<String, MutableList<String>> = mutableMapOf())","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.Builder","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/-builder.html","searchKeys":["Builder","constructor(pathSegments: MutableList<String> = mutableListOf(), parameters: MutableMap<String, MutableList<String>> = mutableMapOf())","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.Builder"]},{"name":"constructor(pathname: String, search: String)","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.LocationData","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-location-data.html","searchKeys":["LocationData","constructor(pathname: String, search: String)","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.LocationData"]},{"name":"constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>)","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-android-s-p-configs-repo.html","searchKeys":["AndroidSPConfigsRepo","constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>)","dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo"]},{"name":"constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, configKClasses: List<KClass<out T>>, key: String = \"navigation\")","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-android-s-p-configs-repo.html","searchKeys":["AndroidSPConfigsRepo","constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, configKClasses: List<KClass<out T>>, key: String = \"navigation\")","dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo"]},{"name":"constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, key: String = \"navigation\", json: Json)","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-android-s-p-configs-repo.html","searchKeys":["AndroidSPConfigsRepo","constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, key: String = \"navigation\", json: Json)","dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo"]},{"name":"constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, subclass: KClass<out T>, vararg subclasses: KClass<out T>)","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-android-s-p-configs-repo.html","searchKeys":["AndroidSPConfigsRepo","constructor(sharedPreferences: SharedPreferences, baseConfigKClass: KClass<T>, subclass: KClass<out T>, vararg subclasses: KClass<out T>)","dev.inmo.navigation.core.AndroidSPConfigsRepo.AndroidSPConfigsRepo"]},{"name":"constructor(string: String = uuid4().toString())","description":"dev.inmo.navigation.core.NavigationChainId.NavigationChainId","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain-id/-navigation-chain-id.html","searchKeys":["NavigationChainId","constructor(string: String = uuid4().toString())","dev.inmo.navigation.core.NavigationChainId.NavigationChainId"]},{"name":"constructor(string: String = uuid4().toString())","description":"dev.inmo.navigation.core.NavigationNodeId.NavigationNodeId","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-id/-navigation-node-id.html","searchKeys":["NavigationNodeId","constructor(string: String = uuid4().toString())","dev.inmo.navigation.core.NavigationNodeId.NavigationNodeId"]},{"name":"data class Builder(val pathSegments: MutableList<String> = mutableListOf(), val parameters: MutableMap<String, MutableList<String>> = mutableMapOf())","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/index.html","searchKeys":["Builder","data class Builder(val pathSegments: MutableList<String> = mutableListOf(), val parameters: MutableMap<String, MutableList<String>> = mutableMapOf())","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder"]},{"name":"data class Chain<T>(val firstNodeConfig: ConfigHolder.Node<T>?, val id: NavigationChainId? = null) : ConfigHolder<T> ","description":"dev.inmo.navigation.core.repo.ConfigHolder.Chain","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-chain/index.html","searchKeys":["Chain","data class Chain<T>(val firstNodeConfig: ConfigHolder.Node<T>?, val id: NavigationChainId? = null) : ConfigHolder<T> ","dev.inmo.navigation.core.repo.ConfigHolder.Chain"]},{"name":"data class LocationData(val pathname: String, val search: String)","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/index.html","searchKeys":["LocationData","data class LocationData(val pathname: String, val search: String)","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData"]},{"name":"data class Node<T>(val config: T, val subnode: ConfigHolder.Node<T>?, val subchains: List<ConfigHolder.Chain<T>>) : ConfigHolder<T> ","description":"dev.inmo.navigation.core.repo.ConfigHolder.Node","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-node/index.html","searchKeys":["Node","data class Node<T>(val config: T, val subnode: ConfigHolder.Node<T>?, val subchains: List<ConfigHolder.Chain<T>>) : ConfigHolder<T> ","dev.inmo.navigation.core.repo.ConfigHolder.Node"]},{"name":"data object CREATE : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.CREATE","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-c-r-e-a-t-e/index.html","searchKeys":["CREATE","data object CREATE : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.CREATE"]},{"name":"data object DESTROY : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.DESTROY","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-d-e-s-t-r-o-y/index.html","searchKeys":["DESTROY","data object DESTROY : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.DESTROY"]},{"name":"data object PAUSE : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.PAUSE","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-p-a-u-s-e/index.html","searchKeys":["PAUSE","data object PAUSE : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.PAUSE"]},{"name":"data object RESUME : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.RESUME","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-r-e-s-u-m-e/index.html","searchKeys":["RESUME","data object RESUME : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.RESUME"]},{"name":"data object START : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.START","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-s-t-a-r-t/index.html","searchKeys":["START","data object START : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.START"]},{"name":"data object STOP : NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type.STOP","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/-s-t-o-p/index.html","searchKeys":["STOP","data object STOP : NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.Type.STOP"]},{"name":"fun <Base, Node : NavigationNode<out Base, Base>> Node.detachJob(scope: CoroutineScope): Job","description":"dev.inmo.navigation.core.detachJob","location":"navigation.core/dev.inmo.navigation.core/detach-job.html","searchKeys":["detachJob","fun <Base, Node : NavigationNode<out Base, Base>> Node.detachJob(scope: CoroutineScope): Job","dev.inmo.navigation.core.detachJob"]},{"name":"fun <Base> ChainOrNodeEither<Base>.dropChainInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chain-in-sub-tree.html","searchKeys":["dropChainInSubTree","fun <Base> ChainOrNodeEither<Base>.dropChainInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropChainInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.dropInSubTree(id: NavigationChainId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> ChainOrNodeEither<Base>.dropInSubTree(id: NavigationChainId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.dropInSubTree(id: NavigationNodeId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> ChainOrNodeEither<Base>.dropInSubTree(id: NavigationNodeId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.dropNodeInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-node-in-sub-tree.html","searchKeys":["dropNodeInSubTree","fun <Base> ChainOrNodeEither<Base>.dropNodeInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropNodeInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.findChainInSubTree(id: String): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","fun <Base> ChainOrNodeEither<Base>.findChainInSubTree(id: String): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> ChainOrNodeEither<Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> ChainOrNodeEither<Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","fun <Base> ChainOrNodeEither<Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> ChainOrNodeEither<Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> ChainOrNodeEither<Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> ChainOrNodeEither<Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","description":"dev.inmo.navigation.core.visiter.walkFlow","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-flow.html","searchKeys":["walkFlow","fun <Base> ChainOrNodeEither<Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","dev.inmo.navigation.core.visiter.walkFlow"]},{"name":"fun <Base> ConfigHolder.Chain<Base>.restoreHierarchy(factory: NavigationNodeFactory<Base>, chainToRestore: NavigationChain<Base> = NavigationChain(null, factory, id), dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <Base> ConfigHolder.Chain<Base>.restoreHierarchy(factory: NavigationNodeFactory<Base>, chainToRestore: NavigationChain<Base> = NavigationChain(null, factory, id), dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun <Base> ConfigHolder.Chain<Base>.restoreHierarchy(node: NavigationNode<out Base, Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <Base> ConfigHolder.Chain<Base>.restoreHierarchy(node: NavigationNode<out Base, Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun <Base> ConfigHolder.Node<Base>.restoreHierarchy(chain: NavigationChain<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <Base> ConfigHolder.Node<Base>.restoreHierarchy(chain: NavigationChain<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun <Base> Either<NavigationChain<Base>, NavigationNode<out Base, Base>>.changesInSubtreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","description":"dev.inmo.navigation.core.extensions.changesInSubtreeFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/changes-in-subtree-flow.html","searchKeys":["changesInSubtreeFlow","fun <Base> Either<NavigationChain<Base>, NavigationNode<out Base, Base>>.changesInSubtreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","dev.inmo.navigation.core.extensions.changesInSubtreeFlow"]},{"name":"fun <Base> Either<NavigationChain<Base>, NavigationNode<out Base, Base>>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-tree.html","searchKeys":["onChangesInSubTree","fun <Base> Either<NavigationChain<Base>, NavigationNode<out Base, Base>>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.chainOrNodeEither(): ChainOrNodeEither<Base>","description":"dev.inmo.navigation.core.chainOrNodeEither","location":"navigation.core/dev.inmo.navigation.core/chain-or-node-either.html","searchKeys":["chainOrNodeEither","fun <Base> NavigationChain<Base>.chainOrNodeEither(): ChainOrNodeEither<Base>","dev.inmo.navigation.core.chainOrNodeEither"]},{"name":"fun <Base> NavigationChain<Base>.changesInSubTreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","description":"dev.inmo.navigation.core.extensions.changesInSubTreeFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/changes-in-sub-tree-flow.html","searchKeys":["changesInSubTreeFlow","fun <Base> NavigationChain<Base>.changesInSubTreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","dev.inmo.navigation.core.extensions.changesInSubTreeFlow"]},{"name":"fun <Base> NavigationChain<Base>.dropChainInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chain-in-sub-tree.html","searchKeys":["dropChainInSubTree","fun <Base> NavigationChain<Base>.dropChainInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropChainInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.dropInSubTree(id: NavigationChainId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> NavigationChain<Base>.dropInSubTree(id: NavigationChainId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.dropInSubTree(id: NavigationNodeId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> NavigationChain<Base>.dropInSubTree(id: NavigationNodeId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.dropNodeInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-node-in-sub-tree.html","searchKeys":["dropNodeInSubTree","fun <Base> NavigationChain<Base>.dropNodeInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropNodeInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.findChain(id: NavigationChainId): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChain","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain.html","searchKeys":["findChain","fun <Base> NavigationChain<Base>.findChain(id: NavigationChainId): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChain"]},{"name":"fun <Base> NavigationChain<Base>.findChainInSubTree(id: String): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","fun <Base> NavigationChain<Base>.findChainInSubTree(id: String): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> NavigationChain<Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> NavigationChain<Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.findNode(id: NavigationNodeId): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNode","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node.html","searchKeys":["findNode","fun <Base> NavigationChain<Base>.findNode(id: NavigationNodeId): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNode"]},{"name":"fun <Base> NavigationChain<Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","fun <Base> NavigationChain<Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.onChangesInSubChains(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubChains","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-chains.html","searchKeys":["onChangesInSubChains","fun <Base> NavigationChain<Base>.onChangesInSubChains(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubChains"]},{"name":"fun <Base> NavigationChain<Base>.onChangesInSubNodes(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubNodes","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-nodes.html","searchKeys":["onChangesInSubNodes","fun <Base> NavigationChain<Base>.onChangesInSubNodes(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubNodes"]},{"name":"fun <Base> NavigationChain<Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-tree.html","searchKeys":["onChangesInSubTree","fun <Base> NavigationChain<Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-tree.html","searchKeys":["onChangesInSubTree","fun <Base> NavigationChain<Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.onNodeAddedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","description":"dev.inmo.navigation.core.extensions.onNodeAddedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-added-flow.html","searchKeys":["onNodeAddedFlow","fun <Base> NavigationChain<Base>.onNodeAddedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","dev.inmo.navigation.core.extensions.onNodeAddedFlow"]},{"name":"fun <Base> NavigationChain<Base>.onNodeRemovedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","description":"dev.inmo.navigation.core.extensions.onNodeRemovedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-removed-flow.html","searchKeys":["onNodeRemovedFlow","fun <Base> NavigationChain<Base>.onNodeRemovedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","dev.inmo.navigation.core.extensions.onNodeRemovedFlow"]},{"name":"fun <Base> NavigationChain<Base>.onNodeReplacedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<Pair<IndexedValue<NavigationNode<out Base, Base>>, IndexedValue<NavigationNode<out Base, Base>>>>>","description":"dev.inmo.navigation.core.extensions.onNodeReplacedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-replaced-flow.html","searchKeys":["onNodeReplacedFlow","fun <Base> NavigationChain<Base>.onNodeReplacedFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<List<Pair<IndexedValue<NavigationNode<out Base, Base>>, IndexedValue<NavigationNode<out Base, Base>>>>>","dev.inmo.navigation.core.extensions.onNodeReplacedFlow"]},{"name":"fun <Base> NavigationChain<Base>.onNodesStackDiffFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<Diff<NavigationNode<out Base, Base>>>","description":"dev.inmo.navigation.core.extensions.onNodesStackDiffFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-nodes-stack-diff-flow.html","searchKeys":["onNodesStackDiffFlow","fun <Base> NavigationChain<Base>.onNodesStackDiffFlow(initial: List<NavigationNode<out Base, Base>>? = null): Flow<Diff<NavigationNode<out Base, Base>>>","dev.inmo.navigation.core.extensions.onNodesStackDiffFlow"]},{"name":"fun <Base> NavigationChain<Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> NavigationChain<Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> NavigationChain<Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> NavigationChain<Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> NavigationChain<Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationChain<Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationChain<Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationChain<Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> NavigationChain<Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> NavigationChain<Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationChain<Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationChain<Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationChain<Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> NavigationChain<Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> NavigationChain<Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> NavigationChain<Base>.restoreHierarchy(holder: ConfigHolder.Node<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <Base> NavigationChain<Base>.restoreHierarchy(holder: ConfigHolder.Node<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun <Base> NavigationChain<Base>.rootChain(): NavigationChain<Base>","description":"dev.inmo.navigation.core.extensions.rootChain","location":"navigation.core/dev.inmo.navigation.core.extensions/root-chain.html","searchKeys":["rootChain","fun <Base> NavigationChain<Base>.rootChain(): NavigationChain<Base>","dev.inmo.navigation.core.extensions.rootChain"]},{"name":"fun <Base> NavigationChain<Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","description":"dev.inmo.navigation.core.visiter.walkFlow","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-flow.html","searchKeys":["walkFlow","fun <Base> NavigationChain<Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","dev.inmo.navigation.core.visiter.walkFlow"]},{"name":"fun <Base> NavigationNode<*, Base>.dropChainInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chain-in-sub-tree.html","searchKeys":["dropChainInSubTree","fun <Base> NavigationNode<*, Base>.dropChainInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropChainInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.dropInSubTree(id: NavigationChainId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> NavigationNode<*, Base>.dropInSubTree(id: NavigationChainId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.dropInSubTree(id: NavigationNodeId): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","fun <Base> NavigationNode<*, Base>.dropInSubTree(id: NavigationNodeId): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.dropNodeInSubTree(id: String): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-node-in-sub-tree.html","searchKeys":["dropNodeInSubTree","fun <Base> NavigationNode<*, Base>.dropNodeInSubTree(id: String): Boolean","dev.inmo.navigation.core.extensions.dropNodeInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.findChain(id: NavigationChainId): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChain","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain.html","searchKeys":["findChain","fun <Base> NavigationNode<*, Base>.findChain(id: NavigationChainId): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChain"]},{"name":"fun <Base> NavigationNode<*, Base>.findChainInSubTree(id: String): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","fun <Base> NavigationNode<*, Base>.findChainInSubTree(id: String): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> NavigationNode<*, Base>.findInSubTree(id: NavigationChainId): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","fun <Base> NavigationNode<*, Base>.findInSubTree(id: NavigationNodeId): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.findNode(id: NavigationNodeId): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNode","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node.html","searchKeys":["findNode","fun <Base> NavigationNode<*, Base>.findNode(id: NavigationNodeId): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNode"]},{"name":"fun <Base> NavigationNode<*, Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","fun <Base> NavigationNode<*, Base>.findNodeInSubTree(id: String): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> NavigationNode<*, Base>.pushInChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-chains-in-sub-tree.html","searchKeys":["pushInChainsInSubTree","fun <Base> NavigationNode<*, Base>.pushInChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInChainsInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> NavigationNode<*, Base>.pushInNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-nodes-in-sub-tree.html","searchKeys":["pushInNodesInSubTree","fun <Base> NavigationNode<*, Base>.pushInNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInNodesInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationNode<*, Base>.pushInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationNode<*, Base>.pushInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","fun <Base> NavigationNode<*, Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> NavigationNode<*, Base>.replaceChainsInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-chains-in-sub-tree.html","searchKeys":["replaceChainsInSubTree","fun <Base> NavigationNode<*, Base>.replaceChainsInSubTree(mapper: (NavigationChain<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceChainsInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationNode<*, Base>.replaceInSubTree(id: NavigationChainId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationNode<*, Base>.replaceInSubTree(id: NavigationNodeId, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","fun <Base> NavigationNode<*, Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> NavigationNode<*, Base>.replaceNodesInSubTree(id: String, config: Base): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> NavigationNode<*, Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-nodes-in-sub-tree.html","searchKeys":["replaceNodesInSubTree","fun <Base> NavigationNode<*, Base>.replaceNodesInSubTree(mapper: (NavigationNode<*, Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceNodesInSubTree"]},{"name":"fun <Base> NavigationNode<out Base, Base>.chainOrNodeEither(): ChainOrNodeEither<Base>","description":"dev.inmo.navigation.core.chainOrNodeEither","location":"navigation.core/dev.inmo.navigation.core/chain-or-node-either.html","searchKeys":["chainOrNodeEither","fun <Base> NavigationNode<out Base, Base>.chainOrNodeEither(): ChainOrNodeEither<Base>","dev.inmo.navigation.core.chainOrNodeEither"]},{"name":"fun <Base> NavigationNode<out Base, Base>.changesInSubTreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","description":"dev.inmo.navigation.core.extensions.changesInSubTreeFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/changes-in-sub-tree-flow.html","searchKeys":["changesInSubTreeFlow","fun <Base> NavigationNode<out Base, Base>.changesInSubTreeFlow(): Flow<Either<Pair<NavigationChain<Base>, List<NavigationNode<out Base, Base>>>, Pair<NavigationNode<out Base, Base>, List<NavigationChain<Base>>?>>>","dev.inmo.navigation.core.extensions.changesInSubTreeFlow"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChainAddedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<IndexedValue<NavigationChain<Base>>>>","description":"dev.inmo.navigation.core.extensions.onChainAddedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-added-flow.html","searchKeys":["onChainAddedFlow","fun <Base> NavigationNode<out Base, Base>.onChainAddedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<IndexedValue<NavigationChain<Base>>>>","dev.inmo.navigation.core.extensions.onChainAddedFlow"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChainRemovedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<IndexedValue<NavigationChain<Base>>>>","description":"dev.inmo.navigation.core.extensions.onChainRemovedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-removed-flow.html","searchKeys":["onChainRemovedFlow","fun <Base> NavigationNode<out Base, Base>.onChainRemovedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<IndexedValue<NavigationChain<Base>>>>","dev.inmo.navigation.core.extensions.onChainRemovedFlow"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChainReplacedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<Pair<IndexedValue<NavigationChain<Base>>, IndexedValue<NavigationChain<Base>>>>>","description":"dev.inmo.navigation.core.extensions.onChainReplacedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-replaced-flow.html","searchKeys":["onChainReplacedFlow","fun <Base> NavigationNode<out Base, Base>.onChainReplacedFlow(initial: List<NavigationChain<Base>>? = null): Flow<List<Pair<IndexedValue<NavigationChain<Base>>, IndexedValue<NavigationChain<Base>>>>>","dev.inmo.navigation.core.extensions.onChainReplacedFlow"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChainsStackDiffFlow(initial: List<NavigationChain<Base>>? = null): Flow<Diff<NavigationChain<Base>>>","description":"dev.inmo.navigation.core.extensions.onChainsStackDiffFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chains-stack-diff-flow.html","searchKeys":["onChainsStackDiffFlow","fun <Base> NavigationNode<out Base, Base>.onChainsStackDiffFlow(initial: List<NavigationChain<Base>>? = null): Flow<Diff<NavigationChain<Base>>>","dev.inmo.navigation.core.extensions.onChainsStackDiffFlow"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChangesInSubChains(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubChains","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-chains.html","searchKeys":["onChangesInSubChains","fun <Base> NavigationNode<out Base, Base>.onChangesInSubChains(scope: CoroutineScope, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubChains"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChangesInSubNodes(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubNodes","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-nodes.html","searchKeys":["onChangesInSubNodes","fun <Base> NavigationNode<out Base, Base>.onChangesInSubNodes(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubNodes"]},{"name":"fun <Base> NavigationNode<out Base, Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-tree.html","searchKeys":["onChangesInSubTree","fun <Base> NavigationNode<out Base, Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubChainOrNode: suspend (Either<NavigationChain<Base>, NavigationNode<out Base, Base>>, Diff<Either<NavigationChain<Base>, NavigationNode<out Base, Base>>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubTree"]},{"name":"fun <Base> NavigationNode<out Base, Base>.restoreHierarchy(holder: ConfigHolder.Chain<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <Base> NavigationNode<out Base, Base>.restoreHierarchy(holder: ConfigHolder.Chain<Base>, dropRedundantChainsOnRestores: Boolean = false): NavigationChain<Base>","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun <Base> NavigationNode<out Base, Base>.storeHierarchy(): ConfigHolder.Node<Base>?","description":"dev.inmo.navigation.core.repo.storeHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/store-hierarchy.html","searchKeys":["storeHierarchy","fun <Base> NavigationNode<out Base, Base>.storeHierarchy(): ConfigHolder.Node<Base>?","dev.inmo.navigation.core.repo.storeHierarchy"]},{"name":"fun <Base> NavigationNode<out Base, Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","description":"dev.inmo.navigation.core.visiter.walkFlow","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-flow.html","searchKeys":["walkFlow","fun <Base> NavigationNode<out Base, Base>.walkFlow(): Flow<ChainOrNodeEither<Base>>","dev.inmo.navigation.core.visiter.walkFlow"]},{"name":"fun <Config : Base, Base> NavigationNode<Config, Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","description":"dev.inmo.navigation.core.extensions.onChangesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/on-changes-in-sub-tree.html","searchKeys":["onChangesInSubTree","fun <Config : Base, Base> NavigationNode<Config, Base>.onChangesInSubTree(scope: CoroutineScope, onChangeInSubNode: suspend (NavigationNode<out Base, Base>, Diff<NavigationChain<Base>>) -> Unit, onChangeInSubChain: suspend (NavigationChain<Base>, Diff<NavigationNode<out Base, Base>>) -> Unit): Job","dev.inmo.navigation.core.extensions.onChangesInSubTree"]},{"name":"fun <O : Any, Base, Node : NavigationNode<out Base, Base>> Node.invokeOnAsync(state: NavigationNodeState, scope: CoroutineScope, callback: (Node) -> O): Deferred<O?>","description":"dev.inmo.navigation.core.invokeOnAsync","location":"navigation.core/dev.inmo.navigation.core/invoke-on-async.html","searchKeys":["invokeOnAsync","fun <O : Any, Base, Node : NavigationNode<out Base, Base>> Node.invokeOnAsync(state: NavigationNodeState, scope: CoroutineScope, callback: (Node) -> O): Deferred<O?>","dev.inmo.navigation.core.invokeOnAsync"]},{"name":"fun <T> NavigationChain<T>.enableSavingHierarchy(repo: NavigationConfigsRepo<T>, scope: CoroutineScope, chainToSave: NavigationChain<T> = rootChain()): Job","description":"dev.inmo.navigation.core.repo.enableSavingHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/enable-saving-hierarchy.html","searchKeys":["enableSavingHierarchy","fun <T> NavigationChain<T>.enableSavingHierarchy(repo: NavigationConfigsRepo<T>, scope: CoroutineScope, chainToSave: NavigationChain<T> = rootChain()): Job","dev.inmo.navigation.core.repo.enableSavingHierarchy"]},{"name":"fun <T> NavigationChain<T>.storeHierarchy(): ConfigHolder.Chain<T>?","description":"dev.inmo.navigation.core.repo.storeHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/store-hierarchy.html","searchKeys":["storeHierarchy","fun <T> NavigationChain<T>.storeHierarchy(): ConfigHolder.Chain<T>?","dev.inmo.navigation.core.repo.storeHierarchy"]},{"name":"fun <T> NavigationConfigsRepo<T>.enableSavingHierarchy(listeningChain: NavigationChain<T>, scope: CoroutineScope, chainToSave: NavigationChain<T> = listeningChain.rootChain()): Job","description":"dev.inmo.navigation.core.repo.enableSavingHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/enable-saving-hierarchy.html","searchKeys":["enableSavingHierarchy","fun <T> NavigationConfigsRepo<T>.enableSavingHierarchy(listeningChain: NavigationChain<T>, scope: CoroutineScope, chainToSave: NavigationChain<T> = listeningChain.rootChain()): Job","dev.inmo.navigation.core.repo.enableSavingHierarchy"]},{"name":"fun <T> restoreHierarchy(holder: ConfigHolder<T>, factory: NavigationNodeFactory<T>, rootChain: NavigationChain<T> = NavigationChain(null, factory), dropRedundantChainsOnRestore: Boolean = false): NavigationChain<T>?","description":"dev.inmo.navigation.core.repo.restoreHierarchy","location":"navigation.core/dev.inmo.navigation.core.repo/restore-hierarchy.html","searchKeys":["restoreHierarchy","fun <T> restoreHierarchy(holder: ConfigHolder<T>, factory: NavigationNodeFactory<T>, rootChain: NavigationChain<T> = NavigationChain(null, factory), dropRedundantChainsOnRestore: Boolean = false): NavigationChain<T>?","dev.inmo.navigation.core.repo.restoreHierarchy"]},{"name":"fun NavigationChain<*>.recursivelyStorableInNavigationHierarchy(): Boolean","description":"dev.inmo.navigation.core.extensions.recursivelyStorableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core.extensions/recursively-storable-in-navigation-hierarchy.html","searchKeys":["recursivelyStorableInNavigationHierarchy","fun NavigationChain<*>.recursivelyStorableInNavigationHierarchy(): Boolean","dev.inmo.navigation.core.extensions.recursivelyStorableInNavigationHierarchy"]},{"name":"fun NavigationChain<*>.stackStorableInNavigationHierarchy(): Boolean","description":"dev.inmo.navigation.core.extensions.stackStorableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core.extensions/stack-storable-in-navigation-hierarchy.html","searchKeys":["stackStorableInNavigationHierarchy","fun NavigationChain<*>.stackStorableInNavigationHierarchy(): Boolean","dev.inmo.navigation.core.extensions.stackStorableInNavigationHierarchy"]},{"name":"fun NavigationNode<*, *>.recursivelyStorableInNavigationHierarchy(): Boolean","description":"dev.inmo.navigation.core.extensions.recursivelyStorableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core.extensions/recursively-storable-in-navigation-hierarchy.html","searchKeys":["recursivelyStorableInNavigationHierarchy","fun NavigationNode<*, *>.recursivelyStorableInNavigationHierarchy(): Boolean","dev.inmo.navigation.core.extensions.recursivelyStorableInNavigationHierarchy"]},{"name":"fun NavigationNode<*, *>.stackStorableInNavigationHierarchy(): Boolean","description":"dev.inmo.navigation.core.extensions.stackStorableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core.extensions/stack-storable-in-navigation-hierarchy.html","searchKeys":["stackStorableInNavigationHierarchy","fun NavigationNode<*, *>.stackStorableInNavigationHierarchy(): Boolean","dev.inmo.navigation.core.extensions.stackStorableInNavigationHierarchy"]},{"name":"fun NavigationStateChange(old: NavigationNodeState, new: NavigationNodeState): NavigationStateChange?","description":"dev.inmo.navigation.core.NavigationStateChange","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change.html","searchKeys":["NavigationStateChange","fun NavigationStateChange(old: NavigationNodeState, new: NavigationNodeState): NavigationStateChange?","dev.inmo.navigation.core.NavigationStateChange"]},{"name":"fun NavigationStateChangeList(old: NavigationNodeState, new: NavigationNodeState): List<NavigationStateChange>","description":"dev.inmo.navigation.core.NavigationStateChangeList","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change-list.html","searchKeys":["NavigationStateChangeList","fun NavigationStateChangeList(old: NavigationNodeState, new: NavigationNodeState): List<NavigationStateChange>","dev.inmo.navigation.core.NavigationStateChangeList"]},{"name":"fun View.findViewsWithNavigationTag(tag: Any?): List<View>","description":"dev.inmo.navigation.core.findViewsWithNavigationTag","location":"navigation.core/dev.inmo.navigation.core/find-views-with-navigation-tag.html","searchKeys":["findViewsWithNavigationTag","fun View.findViewsWithNavigationTag(tag: Any?): List<View>","dev.inmo.navigation.core.findViewsWithNavigationTag"]},{"name":"fun build(): UrlParametersNavigationConfigsRepo.LocationData","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.build","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/build.html","searchKeys":["build","fun build(): UrlParametersNavigationConfigsRepo.LocationData","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.build"]},{"name":"fun buildUrl(origin: String = document.location ?.origin ?: \"\"): String","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.buildUrl","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/build-url.html","searchKeys":["buildUrl","fun buildUrl(origin: String = document.location ?.origin ?: \"\"): String","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.buildUrl"]},{"name":"fun clear()","description":"dev.inmo.navigation.core.NavigationChain.clear","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/clear.html","searchKeys":["clear","fun clear()","dev.inmo.navigation.core.NavigationChain.clear"]},{"name":"fun createEmptySubChain(id: NavigationChainId? = null): NavigationChain<Base>","description":"dev.inmo.navigation.core.NavigationNode.createEmptySubChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/create-empty-sub-chain.html","searchKeys":["createEmptySubChain","fun createEmptySubChain(id: NavigationChainId? = null): NavigationChain<Base>","dev.inmo.navigation.core.NavigationNode.createEmptySubChain"]},{"name":"fun createSubChain(config: Base, id: NavigationChainId? = null): Pair<NavigationNode<out Base, Base>, NavigationChain<Base>>?","description":"dev.inmo.navigation.core.NavigationNode.createSubChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/create-sub-chain.html","searchKeys":["createSubChain","fun createSubChain(config: Base, id: NavigationChainId? = null): Pair<NavigationNode<out Base, Base>, NavigationChain<Base>>?","dev.inmo.navigation.core.NavigationNode.createSubChain"]},{"name":"fun createSubChain(id: NavigationChainId, config: Base): Pair<NavigationNode<out Base, Base>, NavigationChain<Base>>?","description":"dev.inmo.navigation.core.NavigationNode.createSubChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/create-sub-chain.html","searchKeys":["createSubChain","fun createSubChain(id: NavigationChainId, config: Base): Pair<NavigationNode<out Base, Base>, NavigationChain<Base>>?","dev.inmo.navigation.core.NavigationNode.createSubChain"]},{"name":"fun drop(id: NavigationNodeId): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.drop","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/drop.html","searchKeys":["drop","fun drop(id: NavigationNodeId): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.drop"]},{"name":"fun drop(id: String): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.drop","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/drop.html","searchKeys":["drop","fun drop(id: String): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.drop"]},{"name":"fun drop(node: NavigationNode<*, Base>): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.drop","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/drop.html","searchKeys":["drop","fun drop(node: NavigationNode<*, Base>): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.drop"]},{"name":"fun dropItself(): Boolean","description":"dev.inmo.navigation.core.NavigationChain.dropItself","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/drop-itself.html","searchKeys":["dropItself","fun dropItself(): Boolean","dev.inmo.navigation.core.NavigationChain.dropItself"]},{"name":"fun interface Default<T : NavigationNodeDefaultConfig> : FragmentTransactionConfigurator<T> ","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-default/index.html","searchKeys":["Default","fun interface Default<T : NavigationNodeDefaultConfig> : FragmentTransactionConfigurator<T> ","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default"]},{"name":"fun interface NavigationNodeFactory<Base>","description":"dev.inmo.navigation.core.NavigationNodeFactory","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/index.html","searchKeys":["NavigationNodeFactory","fun interface NavigationNodeFactory<Base>","dev.inmo.navigation.core.NavigationNodeFactory"]},{"name":"fun parameter(key: String, value: String): Boolean","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameter","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/parameter.html","searchKeys":["parameter","fun parameter(key: String, value: String): Boolean","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameter"]},{"name":"fun parameters(key: String, values: Array<String>): Boolean","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/parameters.html","searchKeys":["parameters","fun parameters(key: String, values: Array<String>): Boolean","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters"]},{"name":"fun parameters(key: String, values: Collection<String>): Boolean","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/parameters.html","searchKeys":["parameters","fun parameters(key: String, values: Collection<String>): Boolean","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters"]},{"name":"fun pathSegment(name: String): Boolean","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.pathSegment","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/path-segment.html","searchKeys":["pathSegment","fun pathSegment(name: String): Boolean","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.pathSegment"]},{"name":"fun pop(): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.pop","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/pop.html","searchKeys":["pop","fun pop(): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.pop"]},{"name":"fun push(config: Base): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.push","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/push.html","searchKeys":["push","fun push(config: Base): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.push"]},{"name":"fun removeSubChain(chain: NavigationChain<Base>): Boolean","description":"dev.inmo.navigation.core.NavigationNode.removeSubChain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/remove-sub-chain.html","searchKeys":["removeSubChain","fun removeSubChain(chain: NavigationChain<Base>): Boolean","dev.inmo.navigation.core.NavigationNode.removeSubChain"]},{"name":"fun replace(id: NavigationNodeId, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","description":"dev.inmo.navigation.core.NavigationChain.replace","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/replace.html","searchKeys":["replace","fun replace(id: NavigationNodeId, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","dev.inmo.navigation.core.NavigationChain.replace"]},{"name":"fun replace(id: String, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","description":"dev.inmo.navigation.core.NavigationChain.replace","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/replace.html","searchKeys":["replace","fun replace(id: String, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","dev.inmo.navigation.core.NavigationChain.replace"]},{"name":"fun replace(node: NavigationNode<*, Base>, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","description":"dev.inmo.navigation.core.NavigationChain.replace","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/replace.html","searchKeys":["replace","fun replace(node: NavigationNode<*, Base>, config: Base): Pair<NavigationNode<out Base, Base>, NavigationNode<out Base, Base>>?","dev.inmo.navigation.core.NavigationChain.replace"]},{"name":"fun start(scope: CoroutineScope): Job","description":"dev.inmo.navigation.core.NavigationChain.start","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/start.html","searchKeys":["start","fun start(scope: CoroutineScope): Job","dev.inmo.navigation.core.NavigationChain.start"]},{"name":"fun start(scope: CoroutineScope, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n            (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n        })","description":"dev.inmo.navigation.core.AndroidNavigationHost.start","location":"navigation.core/dev.inmo.navigation.core/-android-navigation-host/start.html","searchKeys":["start","fun start(scope: CoroutineScope, fragmentManager: FragmentManager, rootView: View, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n            (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n        })","dev.inmo.navigation.core.AndroidNavigationHost.start"]},{"name":"fun value(stateNumber: Number): NavigationNodeState?","description":"dev.inmo.navigation.core.NavigationNodeState.Companion.value","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-companion/value.html","searchKeys":["value","fun value(stateNumber: Number): NavigationNodeState?","dev.inmo.navigation.core.NavigationNodeState.Companion.value"]},{"name":"fun values(): List<NavigationNodeState>","description":"dev.inmo.navigation.core.NavigationNodeState.Companion.values","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-companion/values.html","searchKeys":["values","fun values(): List<NavigationNodeState>","dev.inmo.navigation.core.NavigationNodeState.Companion.values"]},{"name":"inline fun <Base : NavigationNodeDefaultConfig> initNavigation(startChain: ConfigHolder.Chain<Base>, configsRepo: NavigationConfigsRepo<Base> = StorageNavigationConfigsRepo(\n        Json { ignoreUnknownKeys = true },\n        ConfigHolder.serializer(Base::class.serializer())\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), rootChain: NavigationChain<Base>, dropRedundantChainsOnRestore: Boolean = false, nodesFactory: NavigationNodeFactory<Base>): Job","description":"dev.inmo.navigation.core.initNavigation","location":"navigation.core/dev.inmo.navigation.core/init-navigation.html","searchKeys":["initNavigation","inline fun <Base : NavigationNodeDefaultConfig> initNavigation(startChain: ConfigHolder.Chain<Base>, configsRepo: NavigationConfigsRepo<Base> = StorageNavigationConfigsRepo(\n        Json { ignoreUnknownKeys = true },\n        ConfigHolder.serializer(Base::class.serializer())\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), rootChain: NavigationChain<Base>, dropRedundantChainsOnRestore: Boolean = false, nodesFactory: NavigationNodeFactory<Base>): Job","dev.inmo.navigation.core.initNavigation"]},{"name":"inline fun <Base : NavigationNodeDefaultConfig> initNavigation(startChain: ConfigHolder.Chain<Base>, configsRepo: NavigationConfigsRepo<Base> = StorageNavigationConfigsRepo(\n        Json { ignoreUnknownKeys = true },\n        ConfigHolder.serializer(Base::class.serializer())\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), rootChain: NavigationChain<Base>? = null, dropRedundantChainsOnRestore: Boolean = false, nodesFactory: NavigationNodeFactory<Base>): Job","description":"dev.inmo.navigation.core.initNavigation","location":"navigation.core/dev.inmo.navigation.core/init-navigation.html","searchKeys":["initNavigation","inline fun <Base : NavigationNodeDefaultConfig> initNavigation(startChain: ConfigHolder.Chain<Base>, configsRepo: NavigationConfigsRepo<Base> = StorageNavigationConfigsRepo(\n        Json { ignoreUnknownKeys = true },\n        ConfigHolder.serializer(Base::class.serializer())\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), rootChain: NavigationChain<Base>? = null, dropRedundantChainsOnRestore: Boolean = false, nodesFactory: NavigationNodeFactory<Base>): Job","dev.inmo.navigation.core.initNavigation"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chains-in-sub-tree.html","searchKeys":["dropChainsInSubTree","inline fun <Base> ChainOrNodeEither<Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropChainsInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","inline fun <Base> ChainOrNodeEither<Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-nodes-in-sub-tree.html","searchKeys":["dropNodesInSubTree","inline fun <Base> ChainOrNodeEither<Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropNodesInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","inline fun <Base> ChainOrNodeEither<Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","inline fun <Base> ChainOrNodeEither<Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","inline fun <Base> ChainOrNodeEither<Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.onChain(onChain: (NavigationChain<Base>) -> Unit): Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","description":"dev.inmo.navigation.core.onChain","location":"navigation.core/dev.inmo.navigation.core/on-chain.html","searchKeys":["onChain","inline fun <Base> ChainOrNodeEither<Base>.onChain(onChain: (NavigationChain<Base>) -> Unit): Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","dev.inmo.navigation.core.onChain"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.onNode(onNode: (NavigationNode<out Base, Base>) -> Unit): Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","description":"dev.inmo.navigation.core.onNode","location":"navigation.core/dev.inmo.navigation.core/on-node.html","searchKeys":["onNode","inline fun <Base> ChainOrNodeEither<Base>.onNode(onNode: (NavigationNode<out Base, Base>) -> Unit): Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","dev.inmo.navigation.core.onNode"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.pushInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/push-in-sub-tree.html","searchKeys":["pushInSubTree","inline fun <Base> ChainOrNodeEither<Base>.pushInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.pushInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","description":"dev.inmo.navigation.core.extensions.replaceInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/replace-in-sub-tree.html","searchKeys":["replaceInSubTree","inline fun <Base> ChainOrNodeEither<Base>.replaceInSubTree(mapper: (ChainOrNodeEither<Base>) -> Base?): Boolean","dev.inmo.navigation.core.extensions.replaceInSubTree"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walk","location":"navigation.core/dev.inmo.navigation.core.visiter/walk.html","searchKeys":["walk","inline fun <Base> ChainOrNodeEither<Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walk"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnChains","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-chains.html","searchKeys":["walkOnChains","inline fun <Base> ChainOrNodeEither<Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnChains"]},{"name":"inline fun <Base> ChainOrNodeEither<Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnNodes","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-nodes.html","searchKeys":["walkOnNodes","inline fun <Base> ChainOrNodeEither<Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnNodes"]},{"name":"inline fun <Base> NavigationChain<Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chains-in-sub-tree.html","searchKeys":["dropChainsInSubTree","inline fun <Base> NavigationChain<Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropChainsInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","inline fun <Base> NavigationChain<Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-nodes-in-sub-tree.html","searchKeys":["dropNodesInSubTree","inline fun <Base> NavigationChain<Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropNodesInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","inline fun <Base> NavigationChain<Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","inline fun <Base> NavigationChain<Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","inline fun <Base> NavigationChain<Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"inline fun <Base> NavigationChain<Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walk","location":"navigation.core/dev.inmo.navigation.core.visiter/walk.html","searchKeys":["walk","inline fun <Base> NavigationChain<Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walk"]},{"name":"inline fun <Base> NavigationChain<Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnChains","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-chains.html","searchKeys":["walkOnChains","inline fun <Base> NavigationChain<Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnChains"]},{"name":"inline fun <Base> NavigationChain<Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnNodes","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-nodes.html","searchKeys":["walkOnNodes","inline fun <Base> NavigationChain<Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnNodes"]},{"name":"inline fun <Base> NavigationNode<*, Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropChainsInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-chains-in-sub-tree.html","searchKeys":["dropChainsInSubTree","inline fun <Base> NavigationNode<*, Base>.dropChainsInSubTree(filter: (NavigationChain<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropChainsInSubTree"]},{"name":"inline fun <Base> NavigationNode<*, Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-in-sub-tree.html","searchKeys":["dropInSubTree","inline fun <Base> NavigationNode<*, Base>.dropInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropInSubTree"]},{"name":"inline fun <Base> NavigationNode<*, Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","description":"dev.inmo.navigation.core.extensions.dropNodesInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/drop-nodes-in-sub-tree.html","searchKeys":["dropNodesInSubTree","inline fun <Base> NavigationNode<*, Base>.dropNodesInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): Boolean","dev.inmo.navigation.core.extensions.dropNodesInSubTree"]},{"name":"inline fun <Base> NavigationNode<*, Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","description":"dev.inmo.navigation.core.extensions.findChainInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-chain-in-sub-tree.html","searchKeys":["findChainInSubTree","inline fun <Base> NavigationNode<*, Base>.findChainInSubTree(filter: (NavigationChain<Base>) -> Boolean): NavigationChain<Base>?","dev.inmo.navigation.core.extensions.findChainInSubTree"]},{"name":"inline fun <Base> NavigationNode<*, Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","description":"dev.inmo.navigation.core.extensions.findInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-in-sub-tree.html","searchKeys":["findInSubTree","inline fun <Base> NavigationNode<*, Base>.findInSubTree(filter: (ChainOrNodeEither<Base>) -> Boolean): ChainOrNodeEither<Base>?","dev.inmo.navigation.core.extensions.findInSubTree"]},{"name":"inline fun <Base> NavigationNode<*, Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","description":"dev.inmo.navigation.core.extensions.findNodeInSubTree","location":"navigation.core/dev.inmo.navigation.core.extensions/find-node-in-sub-tree.html","searchKeys":["findNodeInSubTree","inline fun <Base> NavigationNode<*, Base>.findNodeInSubTree(filter: (NavigationNode<*, Base>) -> Boolean): NavigationNode<*, Base>?","dev.inmo.navigation.core.extensions.findNodeInSubTree"]},{"name":"inline fun <Base> NavigationNode<out Base, Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walk","location":"navigation.core/dev.inmo.navigation.core.visiter/walk.html","searchKeys":["walk","inline fun <Base> NavigationNode<out Base, Base>.walk(onNodeOrChain: NavigationNodeOrChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walk"]},{"name":"inline fun <Base> NavigationNode<out Base, Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnChains","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-chains.html","searchKeys":["walkOnChains","inline fun <Base> NavigationNode<out Base, Base>.walkOnChains(onChain: NavigationChainVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnChains"]},{"name":"inline fun <Base> NavigationNode<out Base, Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","description":"dev.inmo.navigation.core.visiter.walkOnNodes","location":"navigation.core/dev.inmo.navigation.core.visiter/walk-on-nodes.html","searchKeys":["walkOnNodes","inline fun <Base> NavigationNode<out Base, Base>.walkOnNodes(onNode: NavigationNodeVisitingCallback<Base>)","dev.inmo.navigation.core.visiter.walkOnNodes"]},{"name":"inline fun <T : NavigationNodeDefaultConfig> AppCompatActivity.initNavigation(startChain: ConfigHolder<T>, configsRepo: NavigationConfigsRepo<T> = AndroidSPConfigsRepo(\n        getSharedPreferences(\"internal\", AppCompatActivity.MODE_PRIVATE),\n        T::class\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), fragmentManager: FragmentManager = supportFragmentManager, rootView: View = this.rootView!!, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, noinline fragmentsClassesFactory: FragmentsClassesFactory<T>): AndroidNavigationHost<T>","description":"dev.inmo.navigation.core.initNavigation","location":"navigation.core/dev.inmo.navigation.core/init-navigation.html","searchKeys":["initNavigation","inline fun <T : NavigationNodeDefaultConfig> AppCompatActivity.initNavigation(startChain: ConfigHolder<T>, configsRepo: NavigationConfigsRepo<T> = AndroidSPConfigsRepo(\n        getSharedPreferences(\"internal\", AppCompatActivity.MODE_PRIVATE),\n        T::class\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), fragmentManager: FragmentManager = supportFragmentManager, rootView: View = this.rootView!!, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, noinline fragmentsClassesFactory: FragmentsClassesFactory<T>): AndroidNavigationHost<T>","dev.inmo.navigation.core.initNavigation"]},{"name":"inline fun <T : NavigationNodeDefaultConfig> AppCompatActivity.initNavigation(startConfig: T, configsRepo: NavigationConfigsRepo<T> = AndroidSPConfigsRepo(\n        getSharedPreferences(\"internal\", AppCompatActivity.MODE_PRIVATE),\n        T::class\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), fragmentManager: FragmentManager = supportFragmentManager, rootView: View = this.rootView!!, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, noinline fragmentsClassesFactory: FragmentsClassesFactory<T>): AndroidNavigationHost<T>","description":"dev.inmo.navigation.core.initNavigation","location":"navigation.core/dev.inmo.navigation.core/init-navigation.html","searchKeys":["initNavigation","inline fun <T : NavigationNodeDefaultConfig> AppCompatActivity.initNavigation(startConfig: T, configsRepo: NavigationConfigsRepo<T> = AndroidSPConfigsRepo(\n        getSharedPreferences(\"internal\", AppCompatActivity.MODE_PRIVATE),\n        T::class\n    ), scope: CoroutineScope = CoroutineScope(Dispatchers.Main + SupervisorJob()), fragmentManager: FragmentManager = supportFragmentManager, rootView: View = this.rootView!!, flowOnHierarchyChangeListener: FlowOnHierarchyChangeListener = FlowOnHierarchyChangeListener(recursive = true).also {\n        (rootView as ViewGroup).setOnHierarchyChangeListenerRecursively(it)\n    }, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, noinline fragmentsClassesFactory: FragmentsClassesFactory<T>): AndroidNavigationHost<T>","dev.inmo.navigation.core.initNavigation"]},{"name":"inline fun build(initialPathSegments: MutableList<String> = mutableListOf(), initialParameters: MutableMap<String, MutableList<String>> = mutableMapOf(), block: UrlParametersNavigationConfigsRepo.LocationData.Builder.() -> Unit): UrlParametersNavigationConfigsRepo.LocationData","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Companion.build","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-companion/build.html","searchKeys":["build","inline fun build(initialPathSegments: MutableList<String> = mutableListOf(), initialParameters: MutableMap<String, MutableList<String>> = mutableMapOf(), block: UrlParametersNavigationConfigsRepo.LocationData.Builder.() -> Unit): UrlParametersNavigationConfigsRepo.LocationData","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Companion.build"]},{"name":"inline operator fun <T : Any> invoke(sharedPreferences: SharedPreferences, configKClasses: List<KClass<out T>>, key: String = \"navigation\"): AndroidSPConfigsRepo<T>","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion.invoke","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-companion/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> invoke(sharedPreferences: SharedPreferences, configKClasses: List<KClass<out T>>, key: String = \"navigation\"): AndroidSPConfigsRepo<T>","dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion.invoke"]},{"name":"inline operator fun <T : Any> invoke(sharedPreferences: SharedPreferences, key: String = \"navigation\", json: Json): AndroidSPConfigsRepo<T>","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion.invoke","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-companion/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> invoke(sharedPreferences: SharedPreferences, key: String = \"navigation\", json: Json): AndroidSPConfigsRepo<T>","dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion.invoke"]},{"name":"inline operator fun <T : Base, Base> invoke(noinline block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>): NavigationNodeFactory.Typed<T, Base>","description":"dev.inmo.navigation.core.NavigationNodeFactory.Typed.Companion.invoke","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-typed/-companion/invoke.html","searchKeys":["invoke","inline operator fun <T : Base, Base> invoke(noinline block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>): NavigationNodeFactory.Typed<T, Base>","dev.inmo.navigation.core.NavigationNodeFactory.Typed.Companion.invoke"]},{"name":"interface FragmentTransactionConfigurator<T : NavigationNodeDefaultConfig>","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/index.html","searchKeys":["FragmentTransactionConfigurator","interface FragmentTransactionConfigurator<T : NavigationNodeDefaultConfig>","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator"]},{"name":"interface NavigationConfigsRepo<T>","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/index.html","searchKeys":["NavigationConfigsRepo","interface NavigationConfigsRepo<T>","dev.inmo.navigation.core.repo.NavigationConfigsRepo"]},{"name":"interface NavigationNodeDefaultConfig","description":"dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig","location":"navigation.core/dev.inmo.navigation.core.configs/-navigation-node-default-config/index.html","searchKeys":["NavigationNodeDefaultConfig","interface NavigationNodeDefaultConfig","dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig"]},{"name":"object CREATED : NavigationNodeState","description":"dev.inmo.navigation.core.NavigationNodeState.CREATED","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-c-r-e-a-t-e-d/index.html","searchKeys":["CREATED","object CREATED : NavigationNodeState","dev.inmo.navigation.core.NavigationNodeState.CREATED"]},{"name":"object Companion","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.AndroidSPConfigsRepo.Companion"]},{"name":"object Companion","description":"dev.inmo.navigation.core.NavigationNode.Empty.Companion","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.NavigationNode.Empty.Companion"]},{"name":"object Companion","description":"dev.inmo.navigation.core.NavigationNodeFactory.Typed.Companion","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-typed/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.NavigationNodeFactory.Typed.Companion"]},{"name":"object Companion","description":"dev.inmo.navigation.core.NavigationNodeState.Companion","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.NavigationNodeState.Companion"]},{"name":"object Companion","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.Companion","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.Companion"]},{"name":"object Companion","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Companion","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Companion"]},{"name":"object Config","description":"dev.inmo.navigation.core.NavigationNode.Empty.Config","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/-config/index.html","searchKeys":["Config","object Config","dev.inmo.navigation.core.NavigationNode.Empty.Config"]},{"name":"object NEW : NavigationNodeState","description":"dev.inmo.navigation.core.NavigationNodeState.NEW","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-n-e-w/index.html","searchKeys":["NEW","object NEW : NavigationNodeState","dev.inmo.navigation.core.NavigationNodeState.NEW"]},{"name":"object RESUMED : NavigationNodeState","description":"dev.inmo.navigation.core.NavigationNodeState.RESUMED","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-r-e-s-u-m-e-d/index.html","searchKeys":["RESUMED","object RESUMED : NavigationNodeState","dev.inmo.navigation.core.NavigationNodeState.RESUMED"]},{"name":"object STARTED : NavigationNodeState","description":"dev.inmo.navigation.core.NavigationNodeState.STARTED","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-s-t-a-r-t-e-d/index.html","searchKeys":["STARTED","object STARTED : NavigationNodeState","dev.inmo.navigation.core.NavigationNodeState.STARTED"]},{"name":"open class AndroidNavigationHost<T : NavigationNodeDefaultConfig>(configsRepo: NavigationConfigsRepo<T>, startChain: ConfigHolder<T>, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentsClassesFactory: FragmentsClassesFactory<T>)","description":"dev.inmo.navigation.core.AndroidNavigationHost","location":"navigation.core/dev.inmo.navigation.core/-android-navigation-host/index.html","searchKeys":["AndroidNavigationHost","open class AndroidNavigationHost<T : NavigationNodeDefaultConfig>(configsRepo: NavigationConfigsRepo<T>, startChain: ConfigHolder<T>, manualHierarchyCheckerDelayMillis: Long? = 100, dropRedundantChainsOnRestore: Boolean = false, fragmentTransactionConfigurator: FragmentTransactionConfigurator<T>? = null, fragmentsClassesFactory: FragmentsClassesFactory<T>)","dev.inmo.navigation.core.AndroidNavigationHost"]},{"name":"open class DefaultAggregator<Base>(factories: List<NavigationNodeFactory<Base>>) : NavigationNodeFactory<Base> ","description":"dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-default-aggregator/index.html","searchKeys":["DefaultAggregator","open class DefaultAggregator<Base>(factories: List<NavigationNodeFactory<Base>>) : NavigationNodeFactory<Base> ","dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator"]},{"name":"open class Typed<T : Base, Base>(kClass: KClass<*>, block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>) : NavigationNodeFactory<Base> ","description":"dev.inmo.navigation.core.NavigationNodeFactory.Typed","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-typed/index.html","searchKeys":["Typed","open class Typed<T : Base, Base>(kClass: KClass<*>, block: (navigationChain: NavigationChain<Base>, config: T) -> NavigationNode<T, Base>) : NavigationNodeFactory<Base> ","dev.inmo.navigation.core.NavigationNodeFactory.Typed"]},{"name":"open fun onCreate()","description":"dev.inmo.navigation.core.NavigationNode.onCreate","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-create.html","searchKeys":["onCreate","open fun onCreate()","dev.inmo.navigation.core.NavigationNode.onCreate"]},{"name":"open fun onDestroy()","description":"dev.inmo.navigation.core.NavigationNode.onDestroy","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-destroy.html","searchKeys":["onDestroy","open fun onDestroy()","dev.inmo.navigation.core.NavigationNode.onDestroy"]},{"name":"open fun onPause()","description":"dev.inmo.navigation.core.NavigationNode.onPause","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-pause.html","searchKeys":["onPause","open fun onPause()","dev.inmo.navigation.core.NavigationNode.onPause"]},{"name":"open fun onResume()","description":"dev.inmo.navigation.core.NavigationNode.onResume","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-resume.html","searchKeys":["onResume","open fun onResume()","dev.inmo.navigation.core.NavigationNode.onResume"]},{"name":"open fun onStart()","description":"dev.inmo.navigation.core.NavigationNode.onStart","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-start.html","searchKeys":["onStart","open fun onStart()","dev.inmo.navigation.core.NavigationNode.onStart"]},{"name":"open fun onStop()","description":"dev.inmo.navigation.core.NavigationNode.onStop","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/on-stop.html","searchKeys":["onStop","open fun onStop()","dev.inmo.navigation.core.NavigationNode.onStop"]},{"name":"open fun start(scope: CoroutineScope): Job","description":"dev.inmo.navigation.core.NavigationNode.start","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/start.html","searchKeys":["start","open fun start(scope: CoroutineScope): Job","dev.inmo.navigation.core.NavigationNode.start"]},{"name":"open operator override fun compareTo(other: NavigationNodeState): Int","description":"dev.inmo.navigation.core.NavigationNodeState.compareTo","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: NavigationNodeState): Int","dev.inmo.navigation.core.NavigationNodeState.compareTo"]},{"name":"open override fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.onPlace","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-callbacks/on-place.html","searchKeys":["onPlace","open override fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.onPlace"]},{"name":"open override fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.onPlace","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-default/on-place.html","searchKeys":["onPlace","open override fun FragmentTransaction.onPlace(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.onPlace"]},{"name":"open override fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.onRemove","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-callbacks/on-remove.html","searchKeys":["onRemove","open override fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Callbacks.onRemove"]},{"name":"open override fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","description":"dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.onRemove","location":"navigation.core/dev.inmo.navigation.core.fragments.transactions/-fragment-transaction-configurator/-default/on-remove.html","searchKeys":["onRemove","open override fun FragmentTransaction.onRemove(node: AndroidFragmentNode<out T, T>)","dev.inmo.navigation.core.fragments.transactions.FragmentTransactionConfigurator.Default.onRemove"]},{"name":"open override fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator.createNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-default-aggregator/create-node.html","searchKeys":["createNode","open override fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationNodeFactory.DefaultAggregator.createNode"]},{"name":"open override fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationNodeFactory.Typed.createNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-factory/-typed/create-node.html","searchKeys":["createNode","open override fun createNode(navigationChain: NavigationChain<Base>, config: Base): NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationNodeFactory.Typed.createNode"]},{"name":"open override fun createNode(navigationChain: NavigationChain<T>, config: T): NavigationNode<out T, T>?","description":"dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory.createNode","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-navigation-node-factory/create-node.html","searchKeys":["createNode","open override fun createNode(navigationChain: NavigationChain<T>, config: T): NavigationNode<out T, T>?","dev.inmo.navigation.core.fragments.AndroidNavigationNodeFactory.createNode"]},{"name":"open override fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.get","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/get.html","searchKeys":["get","open override fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.AndroidSPConfigsRepo.get"]},{"name":"open override fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.StorageNavigationConfigsRepo.get","location":"navigation.core/dev.inmo.navigation.core/-storage-navigation-configs-repo/get.html","searchKeys":["get","open override fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.StorageNavigationConfigsRepo.get"]},{"name":"open override fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.get","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/get.html","searchKeys":["get","open override fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.get"]},{"name":"open override fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.get","location":"navigation.core/dev.inmo.navigation.core.urls/-one-parameter-url-navigation-configs-repo/get.html","searchKeys":["get","open override fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.get"]},{"name":"open override fun get(): ConfigHolder<T>?","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.get","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/get.html","searchKeys":["get","open override fun get(): ConfigHolder<T>?","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.get"]},{"name":"open override fun onCreate()","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.onCreate","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/on-create.html","searchKeys":["onCreate","open override fun onCreate()","dev.inmo.navigation.core.fragments.AndroidFragmentNode.onCreate"]},{"name":"open override fun onDestroy()","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.onDestroy","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","dev.inmo.navigation.core.fragments.AndroidFragmentNode.onDestroy"]},{"name":"open override fun onPause()","description":"dev.inmo.navigation.core.JsNavigationNode.onPause","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/on-pause.html","searchKeys":["onPause","open override fun onPause()","dev.inmo.navigation.core.JsNavigationNode.onPause"]},{"name":"open override fun onPause()","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.onPause","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/on-pause.html","searchKeys":["onPause","open override fun onPause()","dev.inmo.navigation.core.fragments.AndroidFragmentNode.onPause"]},{"name":"open override fun onResume()","description":"dev.inmo.navigation.core.JsNavigationNode.onResume","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/on-resume.html","searchKeys":["onResume","open override fun onResume()","dev.inmo.navigation.core.JsNavigationNode.onResume"]},{"name":"open override fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.AndroidSPConfigsRepo.save","location":"navigation.core/dev.inmo.navigation.core/-android-s-p-configs-repo/save.html","searchKeys":["save","open override fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.AndroidSPConfigsRepo.save"]},{"name":"open override fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.StorageNavigationConfigsRepo.save","location":"navigation.core/dev.inmo.navigation.core/-storage-navigation-configs-repo/save.html","searchKeys":["save","open override fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.StorageNavigationConfigsRepo.save"]},{"name":"open override fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.save","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/save.html","searchKeys":["save","open override fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.save"]},{"name":"open override fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.save","location":"navigation.core/dev.inmo.navigation.core.urls/-one-parameter-url-navigation-configs-repo/save.html","searchKeys":["save","open override fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.urls.OneParameterUrlNavigationConfigsRepo.save"]},{"name":"open override fun save(holder: ConfigHolder<T>)","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.save","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/save.html","searchKeys":["save","open override fun save(holder: ConfigHolder<T>)","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.save"]},{"name":"open override fun start(scope: CoroutineScope): Job","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.start","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/start.html","searchKeys":["start","open override fun start(scope: CoroutineScope): Job","dev.inmo.navigation.core.fragments.AndroidFragmentNode.start"]},{"name":"open override fun toString(): String","description":"dev.inmo.navigation.core.NavigationNodeState.CREATED.toString","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-c-r-e-a-t-e-d/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.inmo.navigation.core.NavigationNodeState.CREATED.toString"]},{"name":"open override fun toString(): String","description":"dev.inmo.navigation.core.NavigationNodeState.NEW.toString","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-n-e-w/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.inmo.navigation.core.NavigationNodeState.NEW.toString"]},{"name":"open override fun toString(): String","description":"dev.inmo.navigation.core.NavigationNodeState.RESUMED.toString","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-r-e-s-u-m-e-d/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.inmo.navigation.core.NavigationNodeState.RESUMED.toString"]},{"name":"open override fun toString(): String","description":"dev.inmo.navigation.core.NavigationNodeState.STARTED.toString","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-s-t-a-r-t-e-d/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.inmo.navigation.core.NavigationNodeState.STARTED.toString"]},{"name":"open override fun toString(): String","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.toString","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.inmo.navigation.core.fragments.AndroidFragmentNode.toString"]},{"name":"open override val chain: NavigationChain<Base>","description":"dev.inmo.navigation.core.JsNavigationNode.chain","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/chain.html","searchKeys":["chain","open override val chain: NavigationChain<Base>","dev.inmo.navigation.core.JsNavigationNode.chain"]},{"name":"open override val chain: NavigationChain<Base>","description":"dev.inmo.navigation.core.NavigationNode.Empty.chain","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/chain.html","searchKeys":["chain","open override val chain: NavigationChain<Base>","dev.inmo.navigation.core.NavigationNode.Empty.chain"]},{"name":"open override val chain: NavigationChain<Base>","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.chain","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/chain.html","searchKeys":["chain","open override val chain: NavigationChain<Base>","dev.inmo.navigation.core.fragments.AndroidFragmentNode.chain"]},{"name":"open override val configState: StateFlow<Config>","description":"dev.inmo.navigation.core.JsNavigationNode.configState","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/config-state.html","searchKeys":["configState","open override val configState: StateFlow<Config>","dev.inmo.navigation.core.JsNavigationNode.configState"]},{"name":"open override val configState: StateFlow<Config>","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.configState","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/config-state.html","searchKeys":["configState","open override val configState: StateFlow<Config>","dev.inmo.navigation.core.fragments.AndroidFragmentNode.configState"]},{"name":"open override val configState: StateFlow<T>","description":"dev.inmo.navigation.core.NavigationNode.Empty.configState","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/config-state.html","searchKeys":["configState","open override val configState: StateFlow<T>","dev.inmo.navigation.core.NavigationNode.Empty.configState"]},{"name":"open override val id: NavigationNodeId","description":"dev.inmo.navigation.core.fragments.AndroidFragmentNode.id","location":"navigation.core/dev.inmo.navigation.core.fragments/-android-fragment-node/id.html","searchKeys":["id","open override val id: NavigationNodeId","dev.inmo.navigation.core.fragments.AndroidFragmentNode.id"]},{"name":"open override val stateNumber: Byte = 0","description":"dev.inmo.navigation.core.NavigationNodeState.NEW.stateNumber","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-n-e-w/state-number.html","searchKeys":["stateNumber","open override val stateNumber: Byte = 0","dev.inmo.navigation.core.NavigationNodeState.NEW.stateNumber"]},{"name":"open override val stateNumber: Byte = 1","description":"dev.inmo.navigation.core.NavigationNodeState.CREATED.stateNumber","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-c-r-e-a-t-e-d/state-number.html","searchKeys":["stateNumber","open override val stateNumber: Byte = 1","dev.inmo.navigation.core.NavigationNodeState.CREATED.stateNumber"]},{"name":"open override val stateNumber: Byte = 2","description":"dev.inmo.navigation.core.NavigationNodeState.STARTED.stateNumber","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-s-t-a-r-t-e-d/state-number.html","searchKeys":["stateNumber","open override val stateNumber: Byte = 2","dev.inmo.navigation.core.NavigationNodeState.STARTED.stateNumber"]},{"name":"open override val stateNumber: Byte = 3","description":"dev.inmo.navigation.core.NavigationNodeState.RESUMED.stateNumber","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/-r-e-s-u-m-e-d/state-number.html","searchKeys":["stateNumber","open override val stateNumber: Byte = 3","dev.inmo.navigation.core.NavigationNodeState.RESUMED.stateNumber"]},{"name":"open override var config: Config","description":"dev.inmo.navigation.core.JsNavigationNode.config","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node/config.html","searchKeys":["config","open override var config: Config","dev.inmo.navigation.core.JsNavigationNode.config"]},{"name":"open val config: Config","description":"dev.inmo.navigation.core.NavigationNode.config","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/config.html","searchKeys":["config","open val config: Config","dev.inmo.navigation.core.NavigationNode.config"]},{"name":"open val id: NavigationNodeId","description":"dev.inmo.navigation.core.NavigationNode.id","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/id.html","searchKeys":["id","open val id: NavigationNodeId","dev.inmo.navigation.core.NavigationNode.id"]},{"name":"open val storableInNavigationHierarchy: Boolean","description":"dev.inmo.navigation.core.NavigationNode.storableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/storable-in-navigation-hierarchy.html","searchKeys":["storableInNavigationHierarchy","open val storableInNavigationHierarchy: Boolean","dev.inmo.navigation.core.NavigationNode.storableInNavigationHierarchy"]},{"name":"open val storableInNavigationHierarchy: Boolean","description":"dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig.storableInNavigationHierarchy","location":"navigation.core/dev.inmo.navigation.core.configs/-navigation-node-default-config/storable-in-navigation-hierarchy.html","searchKeys":["storableInNavigationHierarchy","open val storableInNavigationHierarchy: Boolean","dev.inmo.navigation.core.configs.NavigationNodeDefaultConfig.storableInNavigationHierarchy"]},{"name":"sealed interface ConfigHolder<T>","description":"dev.inmo.navigation.core.repo.ConfigHolder","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/index.html","searchKeys":["ConfigHolder","sealed interface ConfigHolder<T>","dev.inmo.navigation.core.repo.ConfigHolder"]},{"name":"sealed interface NavigationNodeState : Comparable<NavigationNodeState> ","description":"dev.inmo.navigation.core.NavigationNodeState","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-state/index.html","searchKeys":["NavigationNodeState","sealed interface NavigationNodeState : Comparable<NavigationNodeState> ","dev.inmo.navigation.core.NavigationNodeState"]},{"name":"sealed interface Type","description":"dev.inmo.navigation.core.NavigationStateChange.Type","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/-type/index.html","searchKeys":["Type","sealed interface Type","dev.inmo.navigation.core.NavigationStateChange.Type"]},{"name":"suspend fun <Base, Node : NavigationNode<out Base, Base>> Node.waitDetach()","description":"dev.inmo.navigation.core.waitDetach","location":"navigation.core/dev.inmo.navigation.core/wait-detach.html","searchKeys":["waitDetach","suspend fun <Base, Node : NavigationNode<out Base, Base>> Node.waitDetach()","dev.inmo.navigation.core.waitDetach"]},{"name":"suspend fun <O : Any, Base, Node : NavigationNode<out Base, Base>> Node.invokeOn(state: NavigationNodeState, callback: suspend (Node) -> O): O?","description":"dev.inmo.navigation.core.invokeOn","location":"navigation.core/dev.inmo.navigation.core/invoke-on.html","searchKeys":["invokeOn","suspend fun <O : Any, Base, Node : NavigationNode<out Base, Base>> Node.invokeOn(state: NavigationNodeState, callback: suspend (Node) -> O): O?","dev.inmo.navigation.core.invokeOn"]},{"name":"typealias ChainOrNodeEither<Base> = Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","description":"dev.inmo.navigation.core.ChainOrNodeEither","location":"navigation.core/dev.inmo.navigation.core/-chain-or-node-either/index.html","searchKeys":["ChainOrNodeEither","typealias ChainOrNodeEither<Base> = Either<NavigationChain<Base>, NavigationNode<out Base, Base>>","dev.inmo.navigation.core.ChainOrNodeEither"]},{"name":"typealias CookiesNavigationConfigsRepo<T> = StorageNavigationConfigsRepo<T>","description":"dev.inmo.navigation.core.CookiesNavigationConfigsRepo","location":"navigation.core/dev.inmo.navigation.core/-cookies-navigation-configs-repo/index.html","searchKeys":["CookiesNavigationConfigsRepo","typealias CookiesNavigationConfigsRepo<T> = StorageNavigationConfigsRepo<T>","dev.inmo.navigation.core.CookiesNavigationConfigsRepo"]},{"name":"typealias FragmentsClassesFactory<T> = (T) -> KClass<*>?","description":"dev.inmo.navigation.core.FragmentsClassesFactory","location":"navigation.core/dev.inmo.navigation.core/-fragments-classes-factory/index.html","searchKeys":["FragmentsClassesFactory","typealias FragmentsClassesFactory<T> = (T) -> KClass<*>?","dev.inmo.navigation.core.FragmentsClassesFactory"]},{"name":"typealias JsNavigationNodeFactory<Config, Base> = (Base) -> NavigationNode<Config, Base>","description":"dev.inmo.navigation.core.JsNavigationNodeFactory","location":"navigation.core/dev.inmo.navigation.core/-js-navigation-node-factory/index.html","searchKeys":["JsNavigationNodeFactory","typealias JsNavigationNodeFactory<Config, Base> = (Base) -> NavigationNode<Config, Base>","dev.inmo.navigation.core.JsNavigationNodeFactory"]},{"name":"typealias NavigationChainVisitingCallback<Base> = (NavigationChain<Base>) -> Unit","description":"dev.inmo.navigation.core.visiter.NavigationChainVisitingCallback","location":"navigation.core/dev.inmo.navigation.core.visiter/-navigation-chain-visiting-callback/index.html","searchKeys":["NavigationChainVisitingCallback","typealias NavigationChainVisitingCallback<Base> = (NavigationChain<Base>) -> Unit","dev.inmo.navigation.core.visiter.NavigationChainVisitingCallback"]},{"name":"typealias NavigationNodeOrChainVisitingCallback<Base> = (ChainOrNodeEither<Base>) -> Unit","description":"dev.inmo.navigation.core.visiter.NavigationNodeOrChainVisitingCallback","location":"navigation.core/dev.inmo.navigation.core.visiter/-navigation-node-or-chain-visiting-callback/index.html","searchKeys":["NavigationNodeOrChainVisitingCallback","typealias NavigationNodeOrChainVisitingCallback<Base> = (ChainOrNodeEither<Base>) -> Unit","dev.inmo.navigation.core.visiter.NavigationNodeOrChainVisitingCallback"]},{"name":"typealias NavigationNodeVisitingCallback<Base> = (NavigationNode<out Base, Base>) -> Unit","description":"dev.inmo.navigation.core.visiter.NavigationNodeVisitingCallback","location":"navigation.core/dev.inmo.navigation.core.visiter/-navigation-node-visiting-callback/index.html","searchKeys":["NavigationNodeVisitingCallback","typealias NavigationNodeVisitingCallback<Base> = (NavigationNode<out Base, Base>) -> Unit","dev.inmo.navigation.core.visiter.NavigationNodeVisitingCallback"]},{"name":"val <Base> ChainOrNodeEither<Base>.chainOrNull: NavigationChain<Base>?","description":"dev.inmo.navigation.core.chainOrNull","location":"navigation.core/dev.inmo.navigation.core/chain-or-null.html","searchKeys":["chainOrNull","val <Base> ChainOrNodeEither<Base>.chainOrNull: NavigationChain<Base>?","dev.inmo.navigation.core.chainOrNull"]},{"name":"val <Base> ChainOrNodeEither<Base>.chainOrThrow: NavigationChain<Base>","description":"dev.inmo.navigation.core.chainOrThrow","location":"navigation.core/dev.inmo.navigation.core/chain-or-throw.html","searchKeys":["chainOrThrow","val <Base> ChainOrNodeEither<Base>.chainOrThrow: NavigationChain<Base>","dev.inmo.navigation.core.chainOrThrow"]},{"name":"val <Base> ChainOrNodeEither<Base>.nodeOrNull: NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.nodeOrNull","location":"navigation.core/dev.inmo.navigation.core/node-or-null.html","searchKeys":["nodeOrNull","val <Base> ChainOrNodeEither<Base>.nodeOrNull: NavigationNode<out Base, Base>?","dev.inmo.navigation.core.nodeOrNull"]},{"name":"val <Base> ChainOrNodeEither<Base>.nodeOrThrow: NavigationNode<out Base, Base>","description":"dev.inmo.navigation.core.nodeOrThrow","location":"navigation.core/dev.inmo.navigation.core/node-or-throw.html","searchKeys":["nodeOrThrow","val <Base> ChainOrNodeEither<Base>.nodeOrThrow: NavigationNode<out Base, Base>","dev.inmo.navigation.core.nodeOrThrow"]},{"name":"val <Base> NavigationChain<Base>.onNodeAddedFlow: Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","description":"dev.inmo.navigation.core.extensions.onNodeAddedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-added-flow.html","searchKeys":["onNodeAddedFlow","val <Base> NavigationChain<Base>.onNodeAddedFlow: Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","dev.inmo.navigation.core.extensions.onNodeAddedFlow"]},{"name":"val <Base> NavigationChain<Base>.onNodeRemovedFlow: Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","description":"dev.inmo.navigation.core.extensions.onNodeRemovedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-removed-flow.html","searchKeys":["onNodeRemovedFlow","val <Base> NavigationChain<Base>.onNodeRemovedFlow: Flow<List<IndexedValue<NavigationNode<out Base, Base>>>>","dev.inmo.navigation.core.extensions.onNodeRemovedFlow"]},{"name":"val <Base> NavigationChain<Base>.onNodeReplacedFlow: Flow<List<Pair<IndexedValue<NavigationNode<out Base, Base>>, IndexedValue<NavigationNode<out Base, Base>>>>>","description":"dev.inmo.navigation.core.extensions.onNodeReplacedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-node-replaced-flow.html","searchKeys":["onNodeReplacedFlow","val <Base> NavigationChain<Base>.onNodeReplacedFlow: Flow<List<Pair<IndexedValue<NavigationNode<out Base, Base>>, IndexedValue<NavigationNode<out Base, Base>>>>>","dev.inmo.navigation.core.extensions.onNodeReplacedFlow"]},{"name":"val <Base> NavigationChain<Base>.onNodesStackDiffFlow: Flow<Diff<NavigationNode<out Base, Base>>>","description":"dev.inmo.navigation.core.extensions.onNodesStackDiffFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-nodes-stack-diff-flow.html","searchKeys":["onNodesStackDiffFlow","val <Base> NavigationChain<Base>.onNodesStackDiffFlow: Flow<Diff<NavigationNode<out Base, Base>>>","dev.inmo.navigation.core.extensions.onNodesStackDiffFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onChainAddedFlow: Flow<List<IndexedValue<NavigationChain<Base>>>>","description":"dev.inmo.navigation.core.extensions.onChainAddedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-added-flow.html","searchKeys":["onChainAddedFlow","val <Base> NavigationNode<out Base, Base>.onChainAddedFlow: Flow<List<IndexedValue<NavigationChain<Base>>>>","dev.inmo.navigation.core.extensions.onChainAddedFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onChainRemovedFlow: Flow<List<IndexedValue<NavigationChain<Base>>>>","description":"dev.inmo.navigation.core.extensions.onChainRemovedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-removed-flow.html","searchKeys":["onChainRemovedFlow","val <Base> NavigationNode<out Base, Base>.onChainRemovedFlow: Flow<List<IndexedValue<NavigationChain<Base>>>>","dev.inmo.navigation.core.extensions.onChainRemovedFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onChainReplacedFlow: Flow<List<Pair<IndexedValue<NavigationChain<Base>>, IndexedValue<NavigationChain<Base>>>>>","description":"dev.inmo.navigation.core.extensions.onChainReplacedFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chain-replaced-flow.html","searchKeys":["onChainReplacedFlow","val <Base> NavigationNode<out Base, Base>.onChainReplacedFlow: Flow<List<Pair<IndexedValue<NavigationChain<Base>>, IndexedValue<NavigationChain<Base>>>>>","dev.inmo.navigation.core.extensions.onChainReplacedFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onChainsStackDiffFlow: Flow<Diff<NavigationChain<Base>>>","description":"dev.inmo.navigation.core.extensions.onChainsStackDiffFlow","location":"navigation.core/dev.inmo.navigation.core.extensions/on-chains-stack-diff-flow.html","searchKeys":["onChainsStackDiffFlow","val <Base> NavigationNode<out Base, Base>.onChainsStackDiffFlow: Flow<Diff<NavigationChain<Base>>>","dev.inmo.navigation.core.extensions.onChainsStackDiffFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onCreateFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onCreateFlow","location":"navigation.core/dev.inmo.navigation.core/on-create-flow.html","searchKeys":["onCreateFlow","val <Base> NavigationNode<out Base, Base>.onCreateFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onCreateFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onDestroyFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onDestroyFlow","location":"navigation.core/dev.inmo.navigation.core/on-destroy-flow.html","searchKeys":["onDestroyFlow","val <Base> NavigationNode<out Base, Base>.onDestroyFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onDestroyFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onPauseFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onPauseFlow","location":"navigation.core/dev.inmo.navigation.core/on-pause-flow.html","searchKeys":["onPauseFlow","val <Base> NavigationNode<out Base, Base>.onPauseFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onPauseFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onResumeFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onResumeFlow","location":"navigation.core/dev.inmo.navigation.core/on-resume-flow.html","searchKeys":["onResumeFlow","val <Base> NavigationNode<out Base, Base>.onResumeFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onResumeFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onStartFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onStartFlow","location":"navigation.core/dev.inmo.navigation.core/on-start-flow.html","searchKeys":["onStartFlow","val <Base> NavigationNode<out Base, Base>.onStartFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onStartFlow"]},{"name":"val <Base> NavigationNode<out Base, Base>.onStopFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.onStopFlow","location":"navigation.core/dev.inmo.navigation.core/on-stop-flow.html","searchKeys":["onStopFlow","val <Base> NavigationNode<out Base, Base>.onStopFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.onStopFlow"]},{"name":"val <T> Flow<List<T>>.diffFlow: Flow<Diff<T>>","description":"dev.inmo.navigation.core.tmp_utils.diffFlow","location":"navigation.core/dev.inmo.navigation.core.tmp_utils/diff-flow.html","searchKeys":["diffFlow","val <T> Flow<List<T>>.diffFlow: Flow<Diff<T>>","dev.inmo.navigation.core.tmp_utils.diffFlow"]},{"name":"val DefaultFactory: NavigationNodeFactory.Typed<NavigationNode.Empty.Config, Any?>","description":"dev.inmo.navigation.core.NavigationNode.Empty.Companion.DefaultFactory","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/-empty/-companion/-default-factory.html","searchKeys":["DefaultFactory","val DefaultFactory: NavigationNodeFactory.Typed<NavigationNode.Empty.Config, Any?>","dev.inmo.navigation.core.NavigationNode.Empty.Companion.DefaultFactory"]},{"name":"val Global: NavigationConfigsRepo.InMemory<Any>","description":"dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.Companion.Global","location":"navigation.core/dev.inmo.navigation.core.repo/-navigation-configs-repo/-in-memory/-companion/-global.html","searchKeys":["Global","val Global: NavigationConfigsRepo.InMemory<Any>","dev.inmo.navigation.core.repo.NavigationConfigsRepo.InMemory.Companion.Global"]},{"name":"val NavigationNodeDefaultConfig.htmlElementOrNull: HTMLElement?","description":"dev.inmo.navigation.core.htmlElementOrNull","location":"navigation.core/dev.inmo.navigation.core/html-element-or-null.html","searchKeys":["htmlElementOrNull","val NavigationNodeDefaultConfig.htmlElementOrNull: HTMLElement?","dev.inmo.navigation.core.htmlElementOrNull"]},{"name":"val NavigationNodeDefaultConfig.htmlElementOrThrow: HTMLElement","description":"dev.inmo.navigation.core.htmlElementOrThrow","location":"navigation.core/dev.inmo.navigation.core/html-element-or-throw.html","searchKeys":["htmlElementOrThrow","val NavigationNodeDefaultConfig.htmlElementOrThrow: HTMLElement","dev.inmo.navigation.core.htmlElementOrThrow"]},{"name":"val NavigationNodeState.next: NavigationNodeState?","description":"dev.inmo.navigation.core.next","location":"navigation.core/dev.inmo.navigation.core/next.html","searchKeys":["next","val NavigationNodeState.next: NavigationNodeState?","dev.inmo.navigation.core.next"]},{"name":"val NavigationNodeState.nextChange: NavigationStateChange?","description":"dev.inmo.navigation.core.nextChange","location":"navigation.core/dev.inmo.navigation.core/next-change.html","searchKeys":["nextChange","val NavigationNodeState.nextChange: NavigationStateChange?","dev.inmo.navigation.core.nextChange"]},{"name":"val NavigationNodeState.previous: NavigationNodeState?","description":"dev.inmo.navigation.core.previous","location":"navigation.core/dev.inmo.navigation.core/previous.html","searchKeys":["previous","val NavigationNodeState.previous: NavigationNodeState?","dev.inmo.navigation.core.previous"]},{"name":"val NavigationNodeState.previousChange: NavigationStateChange?","description":"dev.inmo.navigation.core.previousChange","location":"navigation.core/dev.inmo.navigation.core/previous-change.html","searchKeys":["previousChange","val NavigationNodeState.previousChange: NavigationStateChange?","dev.inmo.navigation.core.previousChange"]},{"name":"val config: T","description":"dev.inmo.navigation.core.repo.ConfigHolder.Node.config","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-node/config.html","searchKeys":["config","val config: T","dev.inmo.navigation.core.repo.ConfigHolder.Node.config"]},{"name":"val firstNodeConfig: ConfigHolder.Node<T>?","description":"dev.inmo.navigation.core.repo.ConfigHolder.Chain.firstNodeConfig","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-chain/first-node-config.html","searchKeys":["firstNodeConfig","val firstNodeConfig: ConfigHolder.Node<T>?","dev.inmo.navigation.core.repo.ConfigHolder.Chain.firstNodeConfig"]},{"name":"val from: NavigationNodeState","description":"dev.inmo.navigation.core.NavigationStateChange.from","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/from.html","searchKeys":["from","val from: NavigationNodeState","dev.inmo.navigation.core.NavigationStateChange.from"]},{"name":"val id: NavigationChainId? = null","description":"dev.inmo.navigation.core.NavigationChain.id","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/id.html","searchKeys":["id","val id: NavigationChainId? = null","dev.inmo.navigation.core.NavigationChain.id"]},{"name":"val id: NavigationChainId? = null","description":"dev.inmo.navigation.core.repo.ConfigHolder.Chain.id","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-chain/id.html","searchKeys":["id","val id: NavigationChainId? = null","dev.inmo.navigation.core.repo.ConfigHolder.Chain.id"]},{"name":"val isNegative: Boolean","description":"dev.inmo.navigation.core.NavigationStateChange.isNegative","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/is-negative.html","searchKeys":["isNegative","val isNegative: Boolean","dev.inmo.navigation.core.NavigationStateChange.isNegative"]},{"name":"val isPositive: Boolean","description":"dev.inmo.navigation.core.NavigationStateChange.isPositive","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/is-positive.html","searchKeys":["isPositive","val isPositive: Boolean","dev.inmo.navigation.core.NavigationStateChange.isPositive"]},{"name":"val navigationTagKey: Int","description":"dev.inmo.navigation.core.navigationTagKey","location":"navigation.core/dev.inmo.navigation.core/navigation-tag-key.html","searchKeys":["navigationTagKey","val navigationTagKey: Int","dev.inmo.navigation.core.navigationTagKey"]},{"name":"val pair: Pair<NavigationNodeState, NavigationNodeState>","description":"dev.inmo.navigation.core.NavigationStateChange.pair","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/pair.html","searchKeys":["pair","val pair: Pair<NavigationNodeState, NavigationNodeState>","dev.inmo.navigation.core.NavigationStateChange.pair"]},{"name":"val parameters: MutableMap<String, MutableList<String>>","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/parameters.html","searchKeys":["parameters","val parameters: MutableMap<String, MutableList<String>>","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.parameters"]},{"name":"val parentNode: NavigationNode<out Base, Base>?","description":"dev.inmo.navigation.core.NavigationChain.parentNode","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/parent-node.html","searchKeys":["parentNode","val parentNode: NavigationNode<out Base, Base>?","dev.inmo.navigation.core.NavigationChain.parentNode"]},{"name":"val pathSegments: Array<String>","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.pathSegments","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/path-segments.html","searchKeys":["pathSegments","val pathSegments: Array<String>","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.pathSegments"]},{"name":"val pathSegments: MutableList<String>","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.pathSegments","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/-builder/path-segments.html","searchKeys":["pathSegments","val pathSegments: MutableList<String>","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.Builder.pathSegments"]},{"name":"val pathname: String","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.pathname","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/pathname.html","searchKeys":["pathname","val pathname: String","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.pathname"]},{"name":"val search: String","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.search","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/search.html","searchKeys":["search","val search: String","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.search"]},{"name":"val stackFlow: StateFlow<List<NavigationNode<out Base, Base>>>","description":"dev.inmo.navigation.core.NavigationChain.stackFlow","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain/stack-flow.html","searchKeys":["stackFlow","val stackFlow: StateFlow<List<NavigationNode<out Base, Base>>>","dev.inmo.navigation.core.NavigationChain.stackFlow"]},{"name":"val stateChangesFlow: Flow<NavigationStateChange>","description":"dev.inmo.navigation.core.NavigationNode.stateChangesFlow","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/state-changes-flow.html","searchKeys":["stateChangesFlow","val stateChangesFlow: Flow<NavigationStateChange>","dev.inmo.navigation.core.NavigationNode.stateChangesFlow"]},{"name":"val statesFlow: Flow<NavigationNodeState>","description":"dev.inmo.navigation.core.NavigationNode.statesFlow","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/states-flow.html","searchKeys":["statesFlow","val statesFlow: Flow<NavigationNodeState>","dev.inmo.navigation.core.NavigationNode.statesFlow"]},{"name":"val string: String","description":"dev.inmo.navigation.core.NavigationChainId.string","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain-id/string.html","searchKeys":["string","val string: String","dev.inmo.navigation.core.NavigationChainId.string"]},{"name":"val string: String","description":"dev.inmo.navigation.core.NavigationNodeId.string","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-id/string.html","searchKeys":["string","val string: String","dev.inmo.navigation.core.NavigationNodeId.string"]},{"name":"val subchains: List<ConfigHolder.Chain<T>>","description":"dev.inmo.navigation.core.repo.ConfigHolder.Node.subchains","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-node/subchains.html","searchKeys":["subchains","val subchains: List<ConfigHolder.Chain<T>>","dev.inmo.navigation.core.repo.ConfigHolder.Node.subchains"]},{"name":"val subchains: List<NavigationChain<Base>>","description":"dev.inmo.navigation.core.NavigationNode.subchains","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/subchains.html","searchKeys":["subchains","val subchains: List<NavigationChain<Base>>","dev.inmo.navigation.core.NavigationNode.subchains"]},{"name":"val subchainsFlow: StateFlow<List<NavigationChain<Base>>>","description":"dev.inmo.navigation.core.NavigationNode.subchainsFlow","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/subchains-flow.html","searchKeys":["subchainsFlow","val subchainsFlow: StateFlow<List<NavigationChain<Base>>>","dev.inmo.navigation.core.NavigationNode.subchainsFlow"]},{"name":"val subnode: ConfigHolder.Node<T>?","description":"dev.inmo.navigation.core.repo.ConfigHolder.Node.subnode","location":"navigation.core/dev.inmo.navigation.core.repo/-config-holder/-node/subnode.html","searchKeys":["subnode","val subnode: ConfigHolder.Node<T>?","dev.inmo.navigation.core.repo.ConfigHolder.Node.subnode"]},{"name":"val to: NavigationNodeState","description":"dev.inmo.navigation.core.NavigationStateChange.to","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/to.html","searchKeys":["to","val to: NavigationNodeState","dev.inmo.navigation.core.NavigationStateChange.to"]},{"name":"val type: NavigationStateChange.Type","description":"dev.inmo.navigation.core.NavigationStateChange.type","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/type.html","searchKeys":["type","val type: NavigationStateChange.Type","dev.inmo.navigation.core.NavigationStateChange.type"]},{"name":"val urlSearchParams: URLSearchParams","description":"dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.urlSearchParams","location":"navigation.core/dev.inmo.navigation.core.urls/-url-parameters-navigation-configs-repo/-location-data/url-search-params.html","searchKeys":["urlSearchParams","val urlSearchParams: URLSearchParams","dev.inmo.navigation.core.urls.UrlParametersNavigationConfigsRepo.LocationData.urlSearchParams"]},{"name":"value class NavigationChainId(val string: String = uuid4().toString())","description":"dev.inmo.navigation.core.NavigationChainId","location":"navigation.core/dev.inmo.navigation.core/-navigation-chain-id/index.html","searchKeys":["NavigationChainId","value class NavigationChainId(val string: String = uuid4().toString())","dev.inmo.navigation.core.NavigationChainId"]},{"name":"value class NavigationNodeId(val string: String = uuid4().toString())","description":"dev.inmo.navigation.core.NavigationNodeId","location":"navigation.core/dev.inmo.navigation.core/-navigation-node-id/index.html","searchKeys":["NavigationNodeId","value class NavigationNodeId(val string: String = uuid4().toString())","dev.inmo.navigation.core.NavigationNodeId"]},{"name":"value class NavigationStateChange","description":"dev.inmo.navigation.core.NavigationStateChange","location":"navigation.core/dev.inmo.navigation.core/-navigation-state-change/index.html","searchKeys":["NavigationStateChange","value class NavigationStateChange","dev.inmo.navigation.core.NavigationStateChange"]},{"name":"var View.navigationTag: Any?","description":"dev.inmo.navigation.core.navigationTag","location":"navigation.core/dev.inmo.navigation.core/navigation-tag.html","searchKeys":["navigationTag","var View.navigationTag: Any?","dev.inmo.navigation.core.navigationTag"]},{"name":"var job: Job?","description":"dev.inmo.navigation.core.AndroidNavigationHost.job","location":"navigation.core/dev.inmo.navigation.core/-android-navigation-host/job.html","searchKeys":["job","var job: Job?","dev.inmo.navigation.core.AndroidNavigationHost.job"]},{"name":"var state: NavigationNodeState","description":"dev.inmo.navigation.core.NavigationNode.state","location":"navigation.core/dev.inmo.navigation.core/-navigation-node/state.html","searchKeys":["state","var state: NavigationNodeState","dev.inmo.navigation.core.NavigationNode.state"]},{"name":"const val createdClassName: String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.createdClassName","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/created-class-name.html","searchKeys":["createdClassName","const val createdClassName: String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.createdClassName"]},{"name":"const val newClassName: String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.newClassName","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/new-class-name.html","searchKeys":["newClassName","const val newClassName: String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.newClassName"]},{"name":"const val resumedClassName: String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.resumedClassName","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/resumed-class-name.html","searchKeys":["resumedClassName","const val resumedClassName: String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.resumedClassName"]},{"name":"const val startedClassName: String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.startedClassName","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/started-class-name.html","searchKeys":["startedClassName","const val startedClassName: String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.startedClassName"]},{"name":"constructor(chains: Map<NavigationNode<*, *>?, NavigationChain<*>>, nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>)","description":"dev.inmo.navigation.mermaid.MermaidGraphData.MermaidGraphData","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-mermaid-graph-data/-mermaid-graph-data.html","searchKeys":["MermaidGraphData","constructor(chains: Map<NavigationNode<*, *>?, NavigationChain<*>>, nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>)","dev.inmo.navigation.mermaid.MermaidGraphData.MermaidGraphData"]},{"name":"data class MermaidGraphData(val chains: Map<NavigationNode<*, *>?, NavigationChain<*>>, val nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>)","description":"dev.inmo.navigation.mermaid.MermaidGraphData","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-mermaid-graph-data/index.html","searchKeys":["MermaidGraphData","data class MermaidGraphData(val chains: Map<NavigationNode<*, *>?, NavigationChain<*>>, val nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>)","dev.inmo.navigation.mermaid.MermaidGraphData"]},{"name":"fun Either<NavigationNode<*, *>, NavigationChain<*>>.buildMermaidLines(): List<String>","description":"dev.inmo.navigation.mermaid.buildMermaidLines","location":"navigation.mermaid/dev.inmo.navigation.mermaid/build-mermaid-lines.html","searchKeys":["buildMermaidLines","fun Either<NavigationNode<*, *>, NavigationChain<*>>.buildMermaidLines(): List<String>","dev.inmo.navigation.mermaid.buildMermaidLines"]},{"name":"fun NavigationChain<*>.buildMermaidContent(): MermaidGraphData","description":"dev.inmo.navigation.mermaid.buildMermaidContent","location":"navigation.mermaid/dev.inmo.navigation.mermaid/build-mermaid-content.html","searchKeys":["buildMermaidContent","fun NavigationChain<*>.buildMermaidContent(): MermaidGraphData","dev.inmo.navigation.mermaid.buildMermaidContent"]},{"name":"fun NavigationChain<*>.buildMermaidLines(): List<String>","description":"dev.inmo.navigation.mermaid.buildMermaidLines","location":"navigation.mermaid/dev.inmo.navigation.mermaid/build-mermaid-lines.html","searchKeys":["buildMermaidLines","fun NavigationChain<*>.buildMermaidLines(): List<String>","dev.inmo.navigation.mermaid.buildMermaidLines"]},{"name":"fun NavigationNode<*, *>.buildMermaidContent(): MermaidGraphData","description":"dev.inmo.navigation.mermaid.buildMermaidContent","location":"navigation.mermaid/dev.inmo.navigation.mermaid/build-mermaid-content.html","searchKeys":["buildMermaidContent","fun NavigationNode<*, *>.buildMermaidContent(): MermaidGraphData","dev.inmo.navigation.mermaid.buildMermaidContent"]},{"name":"fun NavigationNode<*, *>.buildMermaidLines(): List<String>","description":"dev.inmo.navigation.mermaid.buildMermaidLines","location":"navigation.mermaid/dev.inmo.navigation.mermaid/build-mermaid-lines.html","searchKeys":["buildMermaidLines","fun NavigationNode<*, *>.buildMermaidLines(): List<String>","dev.inmo.navigation.mermaid.buildMermaidLines"]},{"name":"fun className(state: NavigationNodeState): String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.className","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/class-name.html","searchKeys":["className","fun className(state: NavigationNodeState): String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.className"]},{"name":"object NavigationMermaidBuilder","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/index.html","searchKeys":["NavigationMermaidBuilder","object NavigationMermaidBuilder","dev.inmo.navigation.mermaid.NavigationMermaidBuilder"]},{"name":"operator fun plus(other: MermaidGraphData): MermaidGraphData","description":"dev.inmo.navigation.mermaid.MermaidGraphData.plus","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-mermaid-graph-data/plus.html","searchKeys":["plus","operator fun plus(other: MermaidGraphData): MermaidGraphData","dev.inmo.navigation.mermaid.MermaidGraphData.plus"]},{"name":"val NavigationNodeState.className: String","description":"dev.inmo.navigation.mermaid.NavigationMermaidBuilder.className","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-navigation-mermaid-builder/class-name.html","searchKeys":["className","val NavigationNodeState.className: String","dev.inmo.navigation.mermaid.NavigationMermaidBuilder.className"]},{"name":"val chains: Map<NavigationNode<*, *>?, NavigationChain<*>>","description":"dev.inmo.navigation.mermaid.MermaidGraphData.chains","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-mermaid-graph-data/chains.html","searchKeys":["chains","val chains: Map<NavigationNode<*, *>?, NavigationChain<*>>","dev.inmo.navigation.mermaid.MermaidGraphData.chains"]},{"name":"val nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>","description":"dev.inmo.navigation.mermaid.MermaidGraphData.nodes","location":"navigation.mermaid/dev.inmo.navigation.mermaid/-mermaid-graph-data/nodes.html","searchKeys":["nodes","val nodes: Map<NavigationChain<*>, List<NavigationNode<*, *>>>","dev.inmo.navigation.mermaid.MermaidGraphData.nodes"]}]