buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()
    }

    dependencies {
        classpath libs.android.tools.build
        classpath libs.android.dexcount
        classpath libs.kotlin.gradle.plugin
        classpath libs.kotlin.serialization.plugin
        classpath libs.kotlin.dokka.plugin
        classpath libs.github.release
    }
}

plugins {
    alias(libs.plugins.kotlin.dokka)
    alias(libs.plugins.versions)
    alias(libs.plugins.nmcp.aggregation)
}

if ((project.hasProperty('SONATYPE_USER') || System.getenv('SONATYPE_USER') != null) && (project.hasProperty('SONATYPE_PASSWORD') || System.getenv('SONATYPE_PASSWORD') != null)) {
    nmcpAggregation {
        centralPortal {
            username = project.hasProperty('SONATYPE_USER') ? project.property('SONATYPE_USER') : System.getenv('SONATYPE_USER')
            password = project.hasProperty('SONATYPE_PASSWORD') ? project.property('SONATYPE_PASSWORD') : System.getenv('SONATYPE_PASSWORD')
            validationTimeout = Duration.ofHours(4)
            publishingType = "AUTOMATIC"
        }

        publishAllProjectsProbablyBreakingProjectIsolation()
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        maven { url "https://nexus.inmo.dev/repository/maven-releases/" }
        mavenLocal()
    }
}

apply from: "./extensions.gradle"
apply from: "./github_release.gradle"
